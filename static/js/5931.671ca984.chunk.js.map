{"version":3,"file":"static/js/5931.671ca984.chunk.js","mappings":"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","sources":["utils/deviceFingerprint.ts","services/auth.service.ts","components/SupportModal.tsx","components/ForgotPasswordModal.tsx","components/TelegramLoginButton.tsx","pages/LoginPage.tsx","services/support.service.ts"],"sourcesContent":["import * as crypto from 'crypto';\r\n\r\nexport interface DeviceInfo {\r\n  deviceId: string;\r\n  deviceFingerprint: string;\r\n  userAgent: string;\r\n  screenResolution: string;\r\n  timezone: string;\r\n  language: string;\r\n  ipAddress?: string;\r\n  location?: string;\r\n  deviceType?: string;\r\n  browser?: string;\r\n  browserVersion?: string;\r\n}\r\n\r\n/**\r\n * Генерация уникального ID устройства\r\n */\r\nexport function generateDeviceId(): string {\r\n  const userAgent = navigator.userAgent;\r\n  const platform = navigator.platform;\r\n  const language = navigator.language;\r\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n  \r\n  // Используем более стабильные характеристики устройства\r\n  const data = `${platform}-${language}-${timezone}-${Date.now()}`;\r\n  \r\n  // Простой хеш\r\n  let hash = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    const char = data.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + char;\r\n    hash = hash & hash; // Convert to 32bit integer\r\n  }\r\n  return Math.abs(hash).toString(36);\r\n}\r\n\r\n/**\r\n * Генерация fingerprint устройства с учетом браузера\r\n */\r\nexport function generateDeviceFingerprint(): string {\r\n  const userAgent = navigator.userAgent;\r\n  const platform = navigator.platform;\r\n  const language = navigator.language;\r\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n  \r\n  // Определяем тип браузера\r\n  const browserInfo = getBrowserInfo();\r\n  \r\n  const data = `${platform}-${language}-${timezone}-${browserInfo.browser}-${browserInfo.version}`;\r\n  \r\n  let hash = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    const char = data.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + char;\r\n    hash = hash & hash;\r\n  }\r\n  return Math.abs(hash).toString(36);\r\n}\r\n\r\n/**\r\n * Определение информации о браузере\r\n */\r\nfunction getBrowserInfo(): { browser: string; version: string } {\r\n  const userAgent = navigator.userAgent;\r\n  \r\n  if (userAgent.includes('Chrome')) {\r\n    return { browser: 'Chrome', version: getVersion(userAgent, 'Chrome') };\r\n  } else if (userAgent.includes('Firefox')) {\r\n    return { browser: 'Firefox', version: getVersion(userAgent, 'Firefox') };\r\n  } else if (userAgent.includes('Safari') && !userAgent.includes('Chrome')) {\r\n    return { browser: 'Safari', version: getVersion(userAgent, 'Safari') };\r\n  } else if (userAgent.includes('Edge')) {\r\n    return { browser: 'Edge', version: getVersion(userAgent, 'Edge') };\r\n  } else if (userAgent.includes('Opera')) {\r\n    return { browser: 'Opera', version: getVersion(userAgent, 'Opera') };\r\n  } else {\r\n    return { browser: 'Unknown', version: 'Unknown' };\r\n  }\r\n}\r\n\r\n/**\r\n * Извлечение версии браузера\r\n */\r\nfunction getVersion(userAgent: string, browserName: string): string {\r\n  const match = userAgent.match(new RegExp(`${browserName}/([\\\\d.]+)`));\r\n  return match ? match[1] : 'Unknown';\r\n}\r\n\r\n/**\r\n * Определение типа устройства\r\n */\r\nfunction getDeviceType(): string {\r\n  const userAgent = navigator.userAgent;\r\n  \r\n  if (/Mobile|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\r\n    return 'mobile';\r\n  } else if (/Tablet|iPad/i.test(userAgent)) {\r\n    return 'tablet';\r\n  } else {\r\n    return 'desktop';\r\n  }\r\n}\r\n\r\n/**\r\n * Получение информации об устройстве\r\n */\r\nexport function getDeviceInfo(): DeviceInfo {\r\n  const userAgent = navigator.userAgent;\r\n  const platform = navigator.platform;\r\n  const language = navigator.language;\r\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n  const deviceType = getDeviceType();\r\n  const browserInfo = getBrowserInfo();\r\n  \r\n  return {\r\n    deviceId: generateDeviceId(),\r\n    deviceFingerprint: generateDeviceFingerprint(),\r\n    userAgent,\r\n    screenResolution: 'unknown',\r\n    timezone,\r\n    language,\r\n    deviceType,\r\n    browser: browserInfo.browser,\r\n    browserVersion: browserInfo.version,\r\n  };\r\n}\r\n\r\n/**\r\n * Получение IP адреса (через внешний сервис)\r\n */\r\nexport async function getIpAddress(): Promise<string> {\r\n  try {\r\n    const response = await fetch('https://api.ipify.org?format=json');\r\n    const data = await response.json();\r\n    return data.ip;\r\n  } catch (error) {\r\n    console.warn('Не удалось получить IP адрес:', error);\r\n    return 'unknown';\r\n  }\r\n}\r\n\r\n/**\r\n * Получение геолокации (город/страна)\r\n */\r\nexport async function getLocation(): Promise<string> {\r\n  try {\r\n    const response = await fetch('https://ipapi.co/json/');\r\n    const data = await response.json();\r\n    return `${data.city}, ${data.country_name}`;\r\n  } catch (error) {\r\n    console.warn('Не удалось получить геолокацию:', error);\r\n    return 'unknown';\r\n  }\r\n}\r\n\r\n/**\r\n * Получение полной информации об устройстве\r\n */\r\nexport async function getFullDeviceInfo(): Promise<DeviceInfo> {\r\n  const baseInfo = getDeviceInfo();\r\n  const [ipAddress, location] = await Promise.all([\r\n    getIpAddress(),\r\n    getLocation(),\r\n  ]);\r\n  \r\n  return {\r\n    ...baseInfo,\r\n    ipAddress,\r\n    location,\r\n  };\r\n} ","import api from './api';\r\nimport { LoginCredentials, User } from '../types';\r\nimport { getFullDeviceInfo, DeviceInfo } from '../utils/deviceFingerprint';\r\n\r\n// Временные типы для восстановления пароля\r\ninterface ForgotPasswordRequest {\r\n  email: string;\r\n}\r\n\r\ninterface ResetPasswordRequest {\r\n  token: string;\r\n  newPassword: string;\r\n}\r\n\r\ninterface ForgotPasswordResponse {\r\n  message: string;\r\n}\r\n\r\ninterface ResetPasswordResponse {\r\n  message: string;\r\n}\r\n\r\nexport const login = async (credentials: LoginCredentials, config?: any): Promise<{ access_token: string; user: User }> => {\r\n  try {\r\n    // Получаем информацию об устройстве\r\n    const deviceInfo = await getFullDeviceInfo();\r\n    \r\n    const response = await api.post('/api/auth/login', {\r\n      ...credentials,\r\n      deviceInfo,\r\n    }, config);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Если не удалось получить информацию об устройстве, отправляем без неё\r\n    const response = await api.post('/api/auth/login', credentials, config);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport const register = async (formData: FormData): Promise<any> => {\r\n  const response = await api.post('/api/auth/register', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const updateProfile = async (userData: Partial<User>): Promise<User> => {\r\n  const response = await api.patch('/api/users/profile', userData);\r\n  return response.data;\r\n};\r\n\r\nexport const updateUser = async (id: number, userData: Partial<User>): Promise<User> => {\r\n  const response = await api.patch(`/api/users/${id}`, userData);\r\n  return response.data;\r\n};\r\n\r\nexport const getProfile = async (token?: string): Promise<User> => {\r\n  const response = await api.get('/api/users/profile', {\r\n    headers: token ? { Authorization: `Bearer ${token}` } : undefined,\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// Получить новый access_token по refresh_token (cookie)\r\nexport async function refreshToken(): Promise<string | null> {\r\n  try {\r\n    const res = await fetch('/api/auth/refresh', {\r\n      method: 'POST',\r\n      credentials: 'include', // чтобы отправлялись cookies\r\n    });\r\n    if (!res.ok) return null;\r\n    const data = await res.json();\r\n    return data.access_token || null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n// Запрос на восстановление пароля\r\nexport const forgotPassword = async (email: string): Promise<ForgotPasswordResponse> => {\r\n  const response = await api.post<ForgotPasswordResponse>('/api/auth/forgot-password', { email });\r\n  return response.data;\r\n};\r\n\r\n// Сброс пароля по токену\r\nexport const resetPassword = async (token: string, newPassword: string): Promise<ResetPasswordResponse> => {\r\n  const response = await api.post<ResetPasswordResponse>('/api/auth/reset-password', { \r\n    token, \r\n    newPassword \r\n  });\r\n  return response.data;\r\n}; ","import React, { useState } from 'react';\r\nimport { Modal, Form, Input, Button, message, Typography } from 'antd';\r\nimport { PhoneOutlined, UserOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { createSupportRequest } from '../services/support.service';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\ninterface SupportModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst SupportModal: React.FC<SupportModalProps> = ({ visible, onClose }) => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (values: any) => {\r\n    setLoading(true);\r\n    try {\r\n      await createSupportRequest(values);\r\n      message.success('Ваш запрос отправлен в службу поддержки. Мы свяжемся с вами в ближайшее время.');\r\n      form.resetFields();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error creating support request:', error);\r\n      message.error('Ошибка при отправке запроса. Попробуйте еще раз.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        <div style={{ textAlign: 'center' }}>\r\n          <Title level={3} style={{ margin: 0 }}>\r\n            <QuestionCircleOutlined style={{ marginRight: 8 }} />\r\n            Служба поддержки\r\n          </Title>\r\n        </div>\r\n      }\r\n      open={visible}\r\n      onCancel={onClose}\r\n      footer={null}\r\n      width={600}\r\n      centered\r\n    >\r\n      <div style={{ marginBottom: 24 }}>\r\n        <Text type=\"secondary\">\r\n          Опишите вашу проблему, и наш специалист свяжется с вами по указанному номеру телефона\r\n        </Text>\r\n      </div>\r\n\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={handleSubmit}\r\n        requiredMark={false}\r\n      >\r\n        <div style={{ display: 'flex', gap: 16 }}>\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Фамилия\"\r\n            rules={[{ required: true, message: 'Пожалуйста, введите фамилию' }]}\r\n            style={{ flex: 1 }}\r\n          >\r\n            <Input \r\n              prefix={<UserOutlined />} \r\n              placeholder=\"Фамилия\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"Имя\"\r\n            rules={[{ required: true, message: 'Пожалуйста, введите имя' }]}\r\n            style={{ flex: 1 }}\r\n          >\r\n            <Input \r\n              prefix={<UserOutlined />} \r\n              placeholder=\"Имя\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"middleName\"\r\n            label=\"Отчество\"\r\n            rules={[{ required: true, message: 'Пожалуйста, введите отчество' }]}\r\n            style={{ flex: 1 }}\r\n          >\r\n            <Input \r\n              prefix={<UserOutlined />} \r\n              placeholder=\"Отчество\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"Номер телефона\"\r\n          rules={[\r\n            { required: true, message: 'Пожалуйста, введите номер телефона' },\r\n            { pattern: /^\\+?[0-9\\s\\-\\(\\)]+$/, message: 'Введите корректный номер телефона' }\r\n          ]}\r\n        >\r\n          <Input \r\n            prefix={<PhoneOutlined />} \r\n            placeholder=\"+7 (999) 123-45-67\"\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"problem\"\r\n          label=\"Опишите вашу проблему\"\r\n          rules={[{ required: true, message: 'Пожалуйста, опишите вашу проблему' }]}\r\n        >\r\n          <TextArea\r\n            rows={6}\r\n            placeholder=\"Подробно опишите проблему, с которой вы столкнулись при работе с площадкой...\"\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item style={{ marginBottom: 0, textAlign: 'center' }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            loading={loading}\r\n            size=\"large\"\r\n            style={{ \r\n              width: 200,\r\n              height: 48,\r\n              fontSize: 16,\r\n              fontWeight: 500\r\n            }}\r\n          >\r\n            Отправить запрос\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SupportModal; ","import React, { useState } from 'react';\r\nimport { Modal, Form, Input, Button, message, Typography } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { forgotPassword, resetPassword } from '../services/auth.service';\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface ForgotPasswordModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ForgotPasswordModal: React.FC<ForgotPasswordModalProps> = ({\r\n  visible,\r\n  onClose,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [step, setStep] = useState<'email' | 'reset'>('email');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleEmailSubmit = async (values: { email: string }) => {\r\n    setLoading(true);\r\n    try {\r\n      await forgotPassword(values.email);\r\n      setEmail(values.email);\r\n      setStep('reset');\r\n      message.success('Инструкции отправлены на ваш email');\r\n    } catch (error: any) {\r\n      const errorMessage = error?.response?.data?.message || 'Ошибка при отправке запроса';\r\n      message.error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResetSubmit = async (values: { token: string; newPassword: string; confirmPassword: string }) => {\r\n    if (values.newPassword !== values.confirmPassword) {\r\n      message.error('Пароли не совпадают');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await resetPassword(values.token, values.newPassword);\r\n      message.success('Пароль успешно изменен');\r\n      onClose();\r\n      form.resetFields();\r\n      setStep('email');\r\n    } catch (error: any) {\r\n      const errorMessage = error?.response?.data?.message || 'Ошибка при сбросе пароля';\r\n      message.error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    form.resetFields();\r\n    setStep('email');\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        step === 'email' \r\n          ? 'Восстановление пароля' \r\n          : 'Введите новый пароль'\r\n      }\r\n      open={visible}\r\n      onCancel={handleClose}\r\n      footer={null}\r\n      width={400}\r\n    >\r\n      {step === 'email' ? (\r\n        <Form\r\n          form={form}\r\n          onFinish={handleEmailSubmit}\r\n          layout=\"vertical\"\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            rules={[\r\n              { required: true, message: 'Введите email' },\r\n              { type: 'email', message: 'Введите корректный email' },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<MailOutlined />}\r\n              placeholder=\"Введите ваш email\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              loading={loading}\r\n              block\r\n              size=\"large\"\r\n            >\r\n              Отправить инструкции\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <div style={{ textAlign: 'center', marginTop: 16 }}>\r\n            <Text type=\"secondary\">\r\n              На ваш email будет отправлена ссылка для восстановления пароля\r\n            </Text>\r\n          </div>\r\n        </Form>\r\n      ) : (\r\n        <Form\r\n          form={form}\r\n          onFinish={handleResetSubmit}\r\n          layout=\"vertical\"\r\n        >\r\n          <Form.Item\r\n            name=\"token\"\r\n            label=\"Код восстановления\"\r\n            rules={[\r\n              { required: true, message: 'Введите код из письма' },\r\n            ]}\r\n          >\r\n            <Input\r\n              placeholder=\"Введите код из письма\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"newPassword\"\r\n            label=\"Новый пароль\"\r\n            rules={[\r\n              { required: true, message: 'Введите новый пароль' },\r\n              { min: 8, message: 'Пароль должен быть не менее 8 символов' },\r\n              {\r\n                pattern: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).+$/,\r\n                message: 'Пароль должен содержать буквы, цифры и спецсимволы',\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              prefix={<LockOutlined />}\r\n              placeholder=\"Введите новый пароль\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirmPassword\"\r\n            label=\"Подтвердите пароль\"\r\n            rules={[\r\n              { required: true, message: 'Подтвердите пароль' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('newPassword') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('Пароли не совпадают'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              prefix={<LockOutlined />}\r\n              placeholder=\"Подтвердите новый пароль\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              loading={loading}\r\n              block\r\n              size=\"large\"\r\n            >\r\n              Изменить пароль\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <div style={{ textAlign: 'center', marginTop: 16 }}>\r\n            <Text type=\"secondary\">\r\n              Код отправлен на {email}\r\n            </Text>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordModal; ","import React, { useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface TelegramLoginButtonProps {\r\n  onSuccess: (token: string, user: any) => void;\r\n  onError?: (error?: any) => void;\r\n}\r\n\r\nconst TELEGRAM_BOT = 'RelatorHub_bot'; // без @\r\nconst TELEGRAM_WIDGET_BOT_ID = process.env.REACT_APP_TELEGRAM_WIDGET_BOT_ID || '';\r\n\r\nconst TelegramLoginButton: React.FC<TelegramLoginButtonProps> = ({ onSuccess, onError }) => {\r\n  const widgetRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Проверяем, не был ли уже добавлен скрипт\r\n    if (document.getElementById('telegram-login-script')) return;\r\n    const script = document.createElement('script');\r\n    script.id = 'telegram-login-script';\r\n    script.src = `https://telegram.org/js/telegram-widget.js?7`;\r\n    script.async = true;\r\n    script.setAttribute('data-telegram-login', TELEGRAM_BOT.replace('@', ''));\r\n    script.setAttribute('data-size', 'large');\r\n    script.setAttribute('data-radius', '8');\r\n    script.setAttribute('data-userpic', 'true');\r\n    script.setAttribute('data-request-access', 'write');\r\n    script.setAttribute('data-lang', 'ru');\r\n    script.setAttribute('data-onauth', 'window.handleTelegramAuth(user)');\r\n    if (widgetRef.current) {\r\n      widgetRef.current.innerHTML = '';\r\n      widgetRef.current.appendChild(script);\r\n    }\r\n    // Глобальный обработчик\r\n    (window as any).handleTelegramAuth = async (user: any) => {\r\n      try {\r\n        const res = await axios.post('/api/auth/telegram-widget-login', user);\r\n        onSuccess(res.data.token, res.data.user);\r\n      } catch (e) {\r\n        if (onError) onError(e);\r\n      }\r\n    };\r\n    // Очистка\r\n    return () => {\r\n      if ((window as any).handleTelegramAuth) delete (window as any).handleTelegramAuth;\r\n    };\r\n  }, [onSuccess, onError]);\r\n\r\n  return (\r\n    <div ref={widgetRef} style={{ display: 'flex', justifyContent: 'center', marginBottom: 8 }} />\r\n  );\r\n};\r\n\r\nexport default TelegramLoginButton; ","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Form, Input, Button, Typography, Row, Col, Card, Alert, Modal, Upload, Select, message, Tabs, Progress } from 'antd';\r\nimport { PlusOutlined, InboxOutlined, PictureOutlined, SafetyCertificateOutlined, QuestionCircleOutlined, UserOutlined, PhoneOutlined, MailOutlined, LockOutlined, BankOutlined } from '@ant-design/icons';\r\nimport InputMask from 'react-input-mask';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { login, getProfile, register } from '../services/auth.service';\r\nimport { setupAuthAutoRefresh } from '../services/api';\r\nimport agenciesList from '../data/agencies_yaroslavl.json';\r\nimport SupportModal from '../components/SupportModal';\r\nimport ForgotPasswordModal from '../components/ForgotPasswordModal';\r\nimport { Form as AntForm } from 'antd';\r\nimport { Divider } from 'antd';\r\nimport TelegramLinkModal from '../components/TelegramLinkModal';\r\nimport TelegramLoginButton from '../components/TelegramLoginButton';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst AGENCY_SEARCH_URL = '/api/agencies?search=';\r\n\r\n// Role options with proper labels\r\nconst ROLE_OPTIONS = [\r\n  { value: 'director', label: 'Директор' },\r\n  { value: 'manager', label: 'Руководитель' },\r\n  { value: 'agent', label: 'Агент по недвижимости' },\r\n  { value: 'private_realtor', label: 'Частный риэлтор' },\r\n];\r\n\r\n// Password validation rules\r\nconst passwordRules = [\r\n  { required: true, message: 'Введите пароль' },\r\n  { min: 8, message: 'Пароль должен быть не менее 8 символов' },\r\n  {\r\n    pattern: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).+$/,\r\n    message: 'Пароль должен содержать буквы, цифры и хотя бы один спецсимвол',\r\n  },\r\n];\r\n\r\n// Error boundary for registration modal\r\nclass RegistrationErrorBoundary extends React.Component<any, { error: any }> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n  static getDerivedStateFromError(error: any) {\r\n    return { error };\r\n  }\r\n  componentDidCatch(error: any, info: any) {\r\n    console.error('RegistrationErrorBoundary caught:', error, info);\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return <div style={{ color: 'red', padding: 24 }}>Ошибка: {String(this.state.error)}</div>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// Add TS declaration for window.__registerForm\r\ndeclare global {\r\n  interface Window {\r\n    __registerForm: any;\r\n  }\r\n}\r\n\r\n// Кастомный компонент для интеграции InputMask с AntD Form\r\ninterface MaskedInputFieldProps {\r\n  name: string;\r\n  mask: string;\r\n  placeholder?: string;\r\n}\r\nconst MaskedInputField: React.FC<MaskedInputFieldProps> = ({ name, mask, placeholder }) => {\r\n  const form = AntForm.useFormInstance();\r\n  const value = AntForm.useWatch(name, form);\r\n  return (\r\n    <InputMask\r\n      mask={mask}\r\n      maskChar={null}\r\n      value={value || ''}\r\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n        form.setFieldValue(name, e.target.value);\r\n        // Принудительно вызываем валидацию\r\n        form.validateFields([name]);\r\n      }}\r\n    >\r\n      {(inputProps: any) => <Input {...inputProps} placeholder={placeholder} />}\r\n    </InputMask>\r\n  );\r\n};\r\n\r\nconst initialFormValues = {\r\n  lastName: '',\r\n  firstName: '',\r\n  middleName: '',\r\n  email: '',\r\n  phone: '+7 (',\r\n  telegramUsername: '',\r\n  whatsappNumber: '+7 (',\r\n  agency: undefined,\r\n  agencies: [],\r\n  role: '',\r\n  position: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  photo: [],\r\n  documents: [],\r\n  logo: []\r\n};\r\n\r\n// Main registration form component\r\nconst RegisterForm: React.FC<{ onSuccess: () => void; form: any }> = ({ onSuccess, form }) => {\r\n  const [role, setRole] = useState<string>('');\r\n\r\n  const agencyOptions = agenciesList.map((name: string) => ({ value: name, label: name }));\r\n\r\n  useEffect(() => {\r\n    window.__registerForm = form;\r\n  }, [form]);\r\n\r\n  // Отслеживаем изменения формы\r\n  useEffect(() => {\r\n    const values = form.getFieldsValue();\r\n    console.log('Form values updated:', values);\r\n  }, [form]);\r\n\r\n  // Custom validators\r\n  const validateAgencies = (_: any, value: any) => {\r\n    if (role === 'private_realtor') {\r\n      if (!value || value.length !== 3) {\r\n        return Promise.reject('Выберите ровно 3 агентства для поручительства');\r\n      }\r\n    } else {\r\n      if (!value) {\r\n        return Promise.reject('Выберите агентство');\r\n      }\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const validateDocuments = (_: any, value: any) => {\r\n    if ((role === 'director' || role === 'private_realtor') && (!value || value.length === 0)) {\r\n      return Promise.reject('Загрузите документы');\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  const validatePhoto = (_: any, value: any) => {\r\n    if (!value || value.length === 0) {\r\n      return Promise.reject('Загрузите фотографию');\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  // Form submission\r\n  const onFinish = async (values: any) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('firstName', values.firstName);\r\n      formData.append('lastName', values.lastName);\r\n      formData.append('middleName', values.middleName);\r\n      formData.append('email', values.email);\r\n      formData.append('phone', values.phone);\r\n      formData.append('password', values.password);\r\n      formData.append('role', values.role);\r\n      if (values.telegramUsername) formData.append('telegramUsername', values.telegramUsername);\r\n      if (values.whatsappNumber) formData.append('whatsappNumber', values.whatsappNumber);\r\n      if (role === 'private_realtor') {\r\n        values.agencies.forEach((agency: string) => formData.append('agencies', agency));\r\n      } else {\r\n        formData.append('agencyName', values.agency);\r\n      }\r\n      if (role !== 'private_realtor' && values.position) {\r\n        formData.append('position', values.position);\r\n      }\r\n      if (values.photo && values.photo.length > 0 && values.photo[0].originFileObj) {\r\n        formData.append('photo', values.photo[0].originFileObj);\r\n      }\r\n      if ((role === 'director' || role === 'private_realtor') && values.logo && values.logo.length > 0 && values.logo[0].originFileObj) {\r\n        formData.append('logo', values.logo[0].originFileObj);\r\n      }\r\n      if (values.documents && values.documents.length > 0) {\r\n        values.documents.forEach((file: any) => {\r\n          if (file.originFileObj) {\r\n            formData.append('documents', file.originFileObj);\r\n          }\r\n        });\r\n      }\r\n      // Логируем содержимое formData для отладки\r\n      Array.from(formData.entries()).forEach(pair => {\r\n        console.log(pair[0] + ':', pair[1]);\r\n      });\r\n      await register(formData);\r\n      let successMessage = '';\r\n      switch (role) {\r\n        case 'director':\r\n          successMessage = 'Регистрация прошла успешно! Ваша заявка отправлена в службу поддержки для проверки документов. Доступ будет открыт после проверки.';\r\n          break;\r\n        case 'agent':\r\n        case 'manager':\r\n          successMessage = 'Регистрация прошла успешно! Ваша заявка отправлена директору агентства для подтверждения. Доступ будет открыт после подтверждения.';\r\n          break;\r\n        case 'private_realtor':\r\n          successMessage = 'Регистрация прошла успешно! Ваша заявка отправлена в службу поддержки и директорам выбранных агентств. Доступ будет открыт после всех проверок.';\r\n          break;\r\n        default:\r\n          successMessage = 'Регистрация прошла успешно! Ожидайте подтверждения.';\r\n      }\r\n      message.success(successMessage);\r\n      onSuccess();\r\n    } catch (error: any) {\r\n      const errorMessage = error?.response?.data?.message || 'Ошибка при регистрации';\r\n      message.error(errorMessage);\r\n      console.error('Registration error:', error);\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    message.error('Проверьте правильность заполнения всех обязательных полей!');\r\n  };\r\n\r\n  // Проверка валидности формы для кнопки\r\n  const isFormValid = () => {\r\n    const values = form.getFieldsValue();\r\n    const errors = form.getFieldsError();\r\n    \r\n    console.log('=== FORM VALIDATION DEBUG ===');\r\n    console.log('All form values:', values);\r\n    console.log('All form errors:', errors);\r\n    console.log('Current role:', role);\r\n    \r\n    if (errors.some((error: any) => error.errors.length > 0)) {\r\n      console.log('❌ Form has validation errors:', errors);\r\n      return false;\r\n    }\r\n    \r\n    const requiredFields = ['firstName', 'lastName', 'middleName', 'email', 'phone', 'password', 'confirmPassword'];\r\n    console.log('Checking required fields...');\r\n    for (const field of requiredFields) {\r\n      if (!values[field]) {\r\n        console.log(`❌ Missing required field: ${field} (value: ${values[field]})`);\r\n        return false;\r\n      } else {\r\n        console.log(`✅ Field ${field}: ${values[field]}`);\r\n      }\r\n    }\r\n    \r\n    if (role === 'private_realtor') {\r\n      if (!values.agencies || values.agencies.length !== 3) {\r\n        console.log(`❌ Private realtor needs exactly 3 agencies, got: ${values.agencies?.length || 0}`);\r\n        return false;\r\n      } else {\r\n        console.log(`✅ Private realtor agencies: ${values.agencies.length}`);\r\n      }\r\n    } else if (role && role !== 'private_realtor') {\r\n      if (!values.agency) {\r\n        console.log(`❌ Non-private realtor needs agency, got: ${values.agency}`);\r\n        return false;\r\n      } else {\r\n        console.log(`✅ Agency selected: ${values.agency}`);\r\n      }\r\n    }\r\n    \r\n    if (!values.photo || values.photo.length === 0) {\r\n      console.log(`❌ Photo is required, got: ${values.photo?.length || 0} files`);\r\n      return false;\r\n    } else {\r\n      console.log(`✅ Photo uploaded: ${values.photo.length} files`);\r\n    }\r\n    \r\n    if ((role === 'director' || role === 'private_realtor') && (!values.documents || values.documents.length === 0)) {\r\n      console.log(`❌ Documents required for ${role}, got: ${values.documents?.length || 0} files`);\r\n      return false;\r\n    } else if (role === 'director' || role === 'private_realtor') {\r\n      console.log(`✅ Documents uploaded: ${values.documents?.length || 0} files`);\r\n    }\r\n    \r\n    console.log('✅ Form is valid!');\r\n    return true;\r\n  };\r\n\r\n  // Debug panel\r\n  const DebugPanel = ({ form }: { form: any }) => {\r\n    const values = AntForm.useWatch([], form) as any;\r\n    const errors = form ? form.getFieldsError() : [];\r\n    const isValid = errors.every((error: any) => error.errors.length === 0);\r\n    const formValid = isFormValid();\r\n    \r\n    return (\r\n      <div style={{ background: '#f7f7f7', border: '1px solid #eee', padding: 12, marginTop: 16, fontSize: 12 }}>\r\n        <b>DEBUG:</b>\r\n        <div>Values: <pre>{JSON.stringify(values, null, 2)}</pre></div>\r\n        <div>Errors: <pre>{JSON.stringify(errors, null, 2)}</pre></div>\r\n        <div>Form validation errors: {isValid ? '✅ None' : '❌ Has errors'}</div>\r\n        <div>Submit button enabled: {formValid ? '✅ Yes' : '❌ No'}</div>\r\n        <div>Current role: {role || 'Not selected'}</div>\r\n        <div>Missing fields for role \"{role}\":</div>\r\n        <ul style={{ margin: '4px 0', paddingLeft: '20px' }}>\r\n          {values && !values.password && <li>❌ password</li>}\r\n          {values && !values.confirmPassword && <li>❌ confirmPassword</li>}\r\n          {values && role === 'director' && !values.agency && <li>❌ agency</li>}\r\n          {values && role === 'director' && (!values.documents || values.documents.length === 0) && <li>❌ documents</li>}\r\n          {values && role === 'private_realtor' && (!values.agencies || values.agencies.length !== 3) && <li>❌ agencies (need exactly 3)</li>}\r\n          {values && role === 'private_realtor' && (!values.documents || values.documents.length === 0) && <li>❌ documents</li>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        name=\"register\"\r\n        form={form}\r\n        initialValues={initialFormValues}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        requiredMark={true}\r\n        autoComplete=\"off\"\r\n        style={{ marginTop: 8 }}\r\n        onValuesChange={(changedValues, allValues) => {\r\n          console.log('Form values changed:', changedValues, 'All values:', allValues);\r\n          // Принудительно обновляем состояние формы\r\n          form.validateFields();\r\n        }}\r\n      >\r\n        <Row gutter={24}>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Фамилия\" name=\"lastName\" rules={[{ required: true, message: 'Введите фамилию' }]}> \r\n              <Input \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('lastName', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Имя\" name=\"firstName\" rules={[{ required: true, message: 'Введите имя' }]}> \r\n              <Input \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('firstName', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Отчество\" name=\"middleName\" rules={[{ required: true, message: 'Введите отчество' }]}> \r\n              <Input \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('middleName', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Телефон\" name=\"phone\" rules={[{ required: true, message: 'Введите телефон' }]}> \r\n              <MaskedInputField name=\"phone\" mask=\"+7 (999) 999-99-99\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Telegram username\" name=\"telegramUsername\"> \r\n              <Input \r\n                placeholder=\"username (без @)\" \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('telegramUsername', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"WhatsApp номер\" name=\"whatsappNumber\"> \r\n              <MaskedInputField name=\"whatsappNumber\" mask=\"+7 (999) 999-99-99\" placeholder=\"+7 (XXX) XXX-XX-XX\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Email\" name=\"email\" rules={[{ required: true, type: 'email', message: 'Введите корректный email' }]}> \r\n              <Input \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('email', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Роль\" name=\"role\" rules={[{ required: true, message: 'Выберите роль' }]}> \r\n              <Select \r\n                options={ROLE_OPTIONS} \r\n                value={role}\r\n                onChange={val => {\r\n                  setRole(val);\r\n                  form.setFieldValue('role', val);\r\n                }} \r\n                placeholder=\"Выберите роль\" \r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n          {role && role !== 'private_realtor' && role !== 'director' && (\r\n            <Col xs={24} sm={12}>\r\n              <Form.Item label=\"Должность\" name=\"position\" rules={[{ required: true, message: 'Выберите должность' }]}> \r\n                <Select \r\n                  options={ROLE_OPTIONS.filter(opt => opt.value !== 'private_realtor')} \r\n                  onChange={val => form.setFieldValue('position', val)} \r\n                  placeholder=\"Выберите должность\" \r\n                /> \r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n          {role && (\r\n            <Col xs={24} sm={12}>\r\n              <Form.Item label={role === 'private_realtor' ? \"Выберите 3 агентства для поручительства (обязательно)\" : \"Выберите агентство (обязательно)\"} name={role === 'private_realtor' ? 'agencies' : 'agency'} rules={[{ validator: validateAgencies }]}> \r\n                {role === 'private_realtor' ? (\r\n                  <Select \r\n                    mode=\"multiple\" \r\n                    showSearch \r\n                    placeholder=\"Выберите 3 агентства...\" \r\n                    options={agencyOptions} \r\n                    filterOption={(input, option) => String(option?.label ?? '').toLowerCase().includes(input.toLowerCase())} \r\n                    maxTagCount={3} \r\n                    onChange={val => form.setFieldValue('agencies', val)}\r\n                  />\r\n                ) : (\r\n                  <Select \r\n                    showSearch \r\n                    placeholder=\"Выберите агентство...\" \r\n                    options={agencyOptions} \r\n                    filterOption={(input, option) => String(option?.label ?? '').toLowerCase().includes(input.toLowerCase())} \r\n                    onChange={val => form.setFieldValue('agency', val)}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label={<span style={{ color: '#ff4d4f' }}>Фотография (обязательно)</span>} name=\"photo\" rules={[{ validator: validatePhoto }]} valuePropName=\"fileList\" getValueFromEvent={e => Array.isArray(e) ? e : e && e.fileList}>\r\n              <Upload listType=\"picture-card\" maxCount={1} beforeUpload={() => false} accept=\"image/*\" onChange={info => form.setFieldValue('photo', info.fileList)}>\r\n                <div><PlusOutlined /> <div style={{ marginTop: 8 }}>Загрузить фото</div></div>\r\n              </Upload>\r\n            </Form.Item>\r\n          </Col>\r\n          {(role === 'director' || role === 'private_realtor') && (\r\n            <Col xs={24} sm={12}>\r\n              <Form.Item label=\"Логотип (необязательно)\" name=\"logo\" valuePropName=\"fileList\" getValueFromEvent={e => Array.isArray(e) ? e : e && e.fileList}>\r\n                <Upload listType=\"picture-card\" maxCount={1} beforeUpload={() => false} accept=\"image/*\" onChange={info => form.setFieldValue('logo', info.fileList)}>\r\n                  <div><PictureOutlined /> <div style={{ marginTop: 8 }}>Загрузить логотип</div></div>\r\n                </Upload>\r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n          {(role === 'director' || role === 'private_realtor') && (\r\n            <Col xs={24} sm={24}>\r\n              <Form.Item label={<span style={{ color: '#ff4d4f' }}>{role === 'director' ? 'Учредительные документы (обязательно)' : 'Подтверждающие документы (обязательно)'}</span>} name=\"documents\" rules={[{ validator: validateDocuments }]} valuePropName=\"fileList\" getValueFromEvent={e => Array.isArray(e) ? e : e && e.fileList}>\r\n                <Upload.Dragger name=\"docs\" maxCount={5} beforeUpload={() => false} accept=\".pdf,.jpg,.jpeg,.png\" onChange={info => form.setFieldValue('documents', info.fileList)}>\r\n                  <p className=\"ant-upload-drag-icon\"><InboxOutlined /></p> <p className=\"ant-upload-text\">Перетащите файлы или кликните для выбора</p> <p className=\"ant-upload-hint\">PDF, JPG, PNG. Можно загрузить несколько файлов.</p>\r\n                </Upload.Dragger>\r\n              </Form.Item>\r\n            </Col>\r\n          )}\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Пароль\" name=\"password\" rules={passwordRules} hasFeedback> \r\n              <Input.Password \r\n                placeholder=\"Введите пароль\" \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('password', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n            <div style={{ fontSize: 12, color: '#888', marginTop: -12, marginBottom: 12 }}>Минимум 8 символов, буквы, цифры и хотя бы один спецсимвол (!@#$%^&* и др.)</div>\r\n          </Col>\r\n          <Col xs={24} sm={12}>\r\n            <Form.Item label=\"Повторите пароль\" name=\"confirmPassword\" dependencies={[\"password\"]} hasFeedback rules={[{ required: true, message: 'Повторите пароль' }, ({ getFieldValue }) => ({ validator(_: any, value: any) { if (!value || getFieldValue('password') === value) { return Promise.resolve(); } return Promise.reject(new Error('Пароли не совпадают')); }, }), ]}> \r\n              <Input.Password \r\n                placeholder=\"Повторите пароль\" \r\n                autoComplete=\"off\" \r\n                onChange={e => form.setFieldValue('confirmPassword', e.target.value)}\r\n              /> \r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Form.Item shouldUpdate>\r\n          {() => (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: '100%' }}\r\n              disabled={!isFormValid()}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n      <DebugPanel form={form} />\r\n    </>\r\n  );\r\n};\r\n\r\n// Remove the old PrivateRealtorRegisterForm since it's now integrated into the main form\r\n\r\nconst RegisterTabs: React.FC<{ onSuccess: () => void; form: any }> = ({ onSuccess, form }) => (\r\n  <RegisterForm onSuccess={onSuccess} form={form} />\r\n);\r\n\r\nconst LoginPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n  const [supportModalVisible, setSupportModalVisible] = useState(false);\r\n  const [forgotPasswordVisible, setForgotPasswordVisible] = useState(false);\r\n  const [registerForm] = Form.useForm();\r\n  const authContext = useContext(AuthContext);\r\n  const [showTelegramModal, setShowTelegramModal] = useState(false);\r\n\r\n  const onFinish = async (values: any) => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const data = await login({ email: values.email, password: values.password }, { withCredentials: true });\r\n      console.log('[LOGIN] access_token:', data.access_token);\r\n      try {\r\n        const payload = JSON.parse(atob(data.access_token.split('.')[1]));\r\n        console.log('[LOGIN] JWT payload:', payload);\r\n      } catch (e) {\r\n        console.warn('[LOGIN] Не удалось декодировать JWT:', e);\r\n      }\r\n      const profile = await getProfile(data.access_token);\r\n      authContext?.setAuthData(data.access_token, profile);\r\n      setupAuthAutoRefresh();\r\n    } catch (err: any) {\r\n      let msg = 'Произошла ошибка при входе в систему';\r\n      \r\n      // Обрабатываем различные типы ошибок\r\n      if (err?.response?.data?.message) {\r\n        msg = err.response.data.message;\r\n      } else if (err?.response?.status === 401) {\r\n        msg = 'Логин и/или пароль введены неверно';\r\n      } else if (err?.response?.status === 500) {\r\n        msg = 'Ошибка сервера. Попробуйте позже';\r\n      } else if (err?.message) {\r\n        msg = err.message;\r\n      }\r\n      \r\n      setError(msg);\r\n      console.error('Login error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTelegramSuccess = (token: string, user: any) => {\r\n    authContext?.setAuthData(token, user);\r\n    setShowTelegramModal(false);\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\" align=\"middle\" style={{ minHeight: '100vh', margin: 0, padding: 0 }}>\r\n      <Col xs={24} sm={24} md={24} lg={24} xl={24} style={{ padding: 0, margin: 0 }}>\r\n        <Card style={{ boxShadow: 'none', border: 'none', maxWidth: '100vw', width: '100%', margin: 0, padding: 0 }} bodyStyle={{ padding: 0 }}>\r\n          <Title level={2} style={{ textAlign: 'center', marginTop: 24 }}>Вход в систему</Title>\r\n          \r\n          {/* Предупреждение о безопасности */}\r\n          <Alert\r\n            message={\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                <SafetyCertificateOutlined style={{ color: '#faad14' }} />\r\n                <span style={{ fontWeight: 500 }}>Важная информация о безопасности</span>\r\n              </div>\r\n            }\r\n            description={\r\n              <div style={{ marginTop: 8 }}>\r\n                <div style={{ margin: 0, fontSize: '14px', lineHeight: '1.5' }}>\r\n                  <strong>Внимание!</strong> Передача ваших учетных данных (логин и пароль) третьим лицам категорически запрещена и приведет к немедленной блокировке аккаунта.\r\n                </div>\r\n                <div style={{ margin: '8px 0 0 0', fontSize: '13px', color: '#666' }}>\r\n                  • Каждый пользователь должен использовать только свои личные учетные данные<br/>\r\n                  • Запрещено предоставлять доступ к аккаунту коллегам, клиентам или другим лицам<br/>\r\n                  • Система отслеживает подозрительную активность и автоматически блокирует нарушителей<br/>\r\n                  • При необходимости смены устройства обратитесь в службу поддержки\r\n                </div>\r\n              </div>\r\n            }\r\n            type=\"warning\"\r\n            showIcon={false}\r\n            style={{ \r\n              margin: '0 auto 24px auto', \r\n              maxWidth: 400,\r\n              borderRadius: 8,\r\n              border: '1px solid #faad14',\r\n              backgroundColor: '#fffbe6'\r\n            }}\r\n          />\r\n          \r\n          <Form\r\n            name=\"login\"\r\n            onFinish={onFinish}\r\n            layout=\"vertical\"\r\n            requiredMark={false}\r\n            preserve={false}\r\n            style={{ maxWidth: 400, margin: '0 auto' }}\r\n          >\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[{ required: true, type: 'email', message: 'Введите корректный email!' }]}\r\n            >\r\n              <Input data-testid=\"login-email\" autoFocus />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Пароль\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Введите пароль!' }]}\r\n            >\r\n              <Input.Password data-testid=\"login-password\" />\r\n            </Form.Item>\r\n\r\n            <div style={{ textAlign: 'right', marginBottom: 16 }}>\r\n              <Button \r\n                type=\"link\" \r\n                size=\"small\"\r\n                onClick={() => setForgotPasswordVisible(true)}\r\n                style={{ padding: 0, height: 'auto' }}\r\n              >\r\n                Забыли пароль?\r\n              </Button>\r\n            </div>\r\n\r\n            {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: 16 }} />}\r\n\r\n            <Form.Item>\r\n              <Button data-testid=\"login-submit\" type=\"primary\" htmlType=\"submit\" loading={loading} style={{ width: '100%' }}>\r\n                Войти\r\n              </Button>\r\n            </Form.Item>\r\n            <Divider plain style={{ margin: '16px 0' }}>или</Divider>\r\n            <div style={{ textAlign: 'center', margin: '16px 0' }}>\r\n              {/* Новый универсальный Telegram Login Widget */}\r\n              <TelegramLoginButton onSuccess={handleTelegramSuccess} onError={() => setError('Ошибка Telegram авторизации. Попробуйте позже или обратитесь в поддержку.')} />\r\n            </div>\r\n          </Form>\r\n          <div style={{ textAlign: 'center', marginTop: 16 }}>\r\n            <Button type=\"link\" style={{ marginRight: 16 }} onClick={() => setRegisterOpen(true)}>\r\n              Регистрация\r\n            </Button>\r\n            <Button \r\n              type=\"link\" \r\n              icon={<QuestionCircleOutlined />}\r\n              onClick={() => setSupportModalVisible(true)}\r\n            >\r\n              Служба поддержки\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n      <Modal\r\n        open={registerOpen}\r\n        onCancel={() => setRegisterOpen(false)}\r\n        footer={null}\r\n        centered={false}\r\n        width=\"100vw\"\r\n        style={{ top: 0, padding: 0, maxWidth: '100vw' }}\r\n        bodyStyle={{ padding: 0, minHeight: '100vh', background: '#fff' }}\r\n        maskStyle={{ background: 'rgba(0,0,0,0.25)' }}\r\n        closable={true}\r\n      >\r\n        <RegistrationErrorBoundary>\r\n          <div style={{ width: '100vw', minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: 0, margin: 0 }}>\r\n            <div style={{ width: '100%', maxWidth: 900, margin: '0 auto', padding: 32 }}>\r\n              <Title level={2} style={{ textAlign: 'center', marginBottom: 24 }}>Регистрация пользователя</Title>\r\n              \r\n              {/* Предупреждение о безопасности для регистрации */}\r\n              <Alert\r\n                message={\r\n                  <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                    <SafetyCertificateOutlined style={{ color: '#faad14' }} />\r\n                    <span style={{ fontWeight: 500 }}>Правила безопасности</span>\r\n                  </div>\r\n                }\r\n                description={\r\n                  <div style={{ marginTop: 8 }}>\r\n                    <div style={{ margin: 0, fontSize: '14px', lineHeight: '1.5' }}>\r\n                      <strong>Важно!</strong> После регистрации вы получите доступ к профессиональной платформе. Помните о правилах безопасности:\r\n                    </div>\r\n                    <div style={{ margin: '8px 0 0 0', fontSize: '13px', color: '#666' }}>\r\n                      • Используйте только свои личные учетные данные<br/>\r\n                      • Не передавайте логин и пароль третьим лицам<br/>\r\n                      • Система автоматически отслеживает подозрительную активность<br/>\r\n                      • При смене устройства обращайтесь в поддержку\r\n                    </div>\r\n                  </div>\r\n                }\r\n                type=\"warning\"\r\n                showIcon={false}\r\n                style={{ \r\n                  marginBottom: 24,\r\n                  borderRadius: 8,\r\n                  border: '1px solid #faad14',\r\n                  backgroundColor: '#fffbe6'\r\n                }}\r\n              />\r\n              \r\n              <RegisterTabs onSuccess={() => setRegisterOpen(false)} form={registerForm} />\r\n            </div>\r\n          </div>\r\n        </RegistrationErrorBoundary>\r\n      </Modal>\r\n      \r\n      <SupportModal \r\n        visible={supportModalVisible}\r\n        onClose={() => setSupportModalVisible(false)}\r\n      />\r\n      \r\n      <ForgotPasswordModal\r\n        visible={forgotPasswordVisible}\r\n        onClose={() => setForgotPasswordVisible(false)}\r\n      />\r\n\r\n      {/* Удаляю/скрываю Modal TelegramLinkModal и showTelegramModal */}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default LoginPage; ","import api from './api';\r\n\r\nexport interface CreateSupportRequestData {\r\n  lastName: string;\r\n  firstName: string;\r\n  middleName: string;\r\n  phone: string;\r\n  problem: string;\r\n}\r\n\r\nexport interface SupportRequest {\r\n  id: number;\r\n  userId: number;\r\n  lastName: string;\r\n  firstName: string;\r\n  middleName: string;\r\n  phone: string;\r\n  problem: string;\r\n  status: 'pending' | 'in_progress' | 'resolved' | 'closed';\r\n  assignedTo?: number;\r\n  resolution?: string;\r\n  resolvedAt?: string;\r\n  resolvedBy?: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport const createSupportRequest = async (data: CreateSupportRequestData) => {\r\n  const response = await api.post('/api/support/requests', data);\r\n  return response.data;\r\n};\r\n\r\nexport const getSupportRequests = async (): Promise<SupportRequest[]> => {\r\n  const response = await api.get('/api/support/requests');\r\n  return response.data;\r\n};\r\n\r\nexport const getPendingSupportRequests = async (): Promise<SupportRequest[]> => {\r\n  const response = await api.get('/api/support/requests/pending');\r\n  return response.data;\r\n};\r\n\r\nexport const getSupportRequest = async (id: number): Promise<SupportRequest> => {\r\n  const response = await api.get(`/api/support/requests/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const assignSupportRequest = async (id: number) => {\r\n  const response = await api.patch(`/api/support/requests/${id}/assign`);\r\n  return response.data;\r\n};\r\n\r\nexport const resolveSupportRequest = async (id: number, resolution: string) => {\r\n  const response = await api.patch(`/api/support/requests/${id}/resolve`, { resolution });\r\n  return response.data;\r\n};\r\n\r\nexport const closeSupportRequest = async (id: number) => {\r\n  const response = await api.patch(`/api/support/requests/${id}/close`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSupportStats = async () => {\r\n  const response = await api.get('/api/support/stats');\r\n  return response.data;\r\n};\r\n\r\n// Новые методы для авторизации агентства\r\nexport const getPendingAgencyAuthorizations = async () => {\r\n  const response = await api.get('/api/support/agency-authorization/pending');\r\n  return response.data;\r\n};\r\n\r\nexport const getAgencyAuthorizationDetails = async (userId: number) => {\r\n  const response = await api.get(`/api/support/agency-authorization/${userId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const approveAgencyAuthorization = async (userId: number) => {\r\n  const response = await api.patch(`/api/support/agency-authorization/${userId}/approve`);\r\n  return response.data;\r\n};\r\n\r\nexport const rejectAgencyAuthorization = async (userId: number, reason: string) => {\r\n  const response = await api.patch(`/api/support/agency-authorization/${userId}/reject`, { reason });\r\n  return response.data;\r\n}; "],"names":["generateDeviceId","navigator","userAgent","data","platform","language","Intl","DateTimeFormat","resolvedOptions","timeZone","Date","now","hash","i","length","charCodeAt","Math","abs","toString","generateDeviceFingerprint","timezone","browserInfo","getBrowserInfo","browser","version","includes","getVersion","browserName","match","RegExp","getDeviceInfo","deviceType","test","getDeviceType","deviceId","deviceFingerprint","screenResolution","browserVersion","async","getIpAddress","response","fetch","json","ip","error","console","warn","getLocation","city","country_name","login","credentials","config","deviceInfo","baseInfo","ipAddress","location","Promise","all","getFullDeviceInfo","api","post","register","formData","headers","updateProfile","patch","userData","getProfile","get","token","Authorization","undefined","refreshToken","res","method","ok","access_token","forgotPassword","email","resetPassword","newPassword","TextArea","_Input","Title","Text","_Typography","_ref","visible","onClose","form","_Form","useForm","loading","setLoading","useState","_jsxs","_Modal","title","_jsx","style","textAlign","children","level","margin","QuestionCircleOutlined","marginRight","open","onCancel","footer","width","centered","marginBottom","type","layout","onFinish","createSupportRequest","values","_message","success","resetFields","requiredMark","display","gap","Item","name","label","rules","required","message","flex","prefix","UserOutlined","placeholder","size","pattern","PhoneOutlined","rows","_Button","htmlType","height","fontSize","fontWeight","step","setStep","setEmail","handleClose","_error$response","_error$response$data","errorMessage","MailOutlined","block","marginTop","confirmPassword","_error$response2","_error$response2$data","min","Password","LockOutlined","_ref2","getFieldValue","validator","_","value","reject","Error","resolve","onSuccess","onError","widgetRef","useRef","useEffect","document","getElementById","script","createElement","id","src","setAttribute","replace","current","innerHTML","appendChild","window","handleTelegramAuth","axios","user","e","ref","justifyContent","ROLE_OPTIONS","passwordRules","RegistrationErrorBoundary","React","constructor","props","super","this","state","getDerivedStateFromError","componentDidCatch","info","render","color","padding","String","MaskedInputField","mask","useFormInstance","useWatch","InputMask","maskChar","onChange","setFieldValue","target","validateFields","inputProps","initialFormValues","lastName","firstName","middleName","phone","telegramUsername","whatsappNumber","agency","agencies","role","position","password","photo","documents","logo","RegisterForm","setRole","agencyOptions","agenciesList","map","__registerForm","getFieldsValue","log","isFormValid","errors","getFieldsError","some","requiredFields","field","_values$agencies","_values$photo","_values$documents","_values$documents2","DebugPanel","_ref3","isValid","every","formValid","background","border","JSON","stringify","paddingLeft","_Fragment","initialValues","FormData","append","forEach","originFileObj","file","Array","from","entries","pair","successMessage","onFinishFailed","errorInfo","autoComplete","onValuesChange","changedValues","allValues","_Row","gutter","_Col","xs","sm","_Select","options","val","filter","opt","validateAgencies","mode","showSearch","filterOption","input","option","_option$label","toLowerCase","maxTagCount","_option$label2","validatePhoto","valuePropName","getValueFromEvent","isArray","fileList","_Upload","listType","maxCount","beforeUpload","accept","PlusOutlined","PictureOutlined","validateDocuments","Dragger","className","InboxOutlined","hasFeedback","dependencies","_ref4","shouldUpdate","disabled","RegisterTabs","_ref5","LoginPage","setError","registerOpen","setRegisterOpen","supportModalVisible","setSupportModalVisible","forgotPasswordVisible","setForgotPasswordVisible","registerForm","authContext","useContext","AuthContext","showTelegramModal","setShowTelegramModal","justify","align","minHeight","md","lg","xl","_Card","boxShadow","maxWidth","bodyStyle","_Alert","alignItems","SafetyCertificateOutlined","description","lineHeight","showIcon","borderRadius","backgroundColor","withCredentials","payload","parse","atob","split","profile","setAuthData","setupAuthAutoRefresh","err","_err$response","_err$response$data","_err$response2","_err$response3","msg","status","preserve","autoFocus","onClick","_Divider","plain","TelegramLoginButton","handleTelegramSuccess","icon","top","maskStyle","closable","SupportModal","ForgotPasswordModal","getSupportRequests","assignSupportRequest","resolveSupportRequest","resolution","closeSupportRequest","getSupportStats","getPendingAgencyAuthorizations","getAgencyAuthorizationDetails","userId","approveAgencyAuthorization","rejectAgencyAuthorization","reason"],"sourceRoot":""}