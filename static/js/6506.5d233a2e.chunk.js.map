{"version":3,"file":"static/js/6506.5d233a2e.chunk.js","mappings":"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","sources":["services/property.service.ts","services/selection.service.ts","components/AddToSelectionModal.tsx","components/Mapbox3DMap.tsx","pages/DashboardPage.tsx"],"sourcesContent":["import api from './api';\r\nimport { Property, PaginatedResponse, FilterOptions } from '../types';\r\n\r\nexport const getAllProperties = async (filters?: FilterOptions): Promise<Property[]> => {\r\n  const params = new URLSearchParams();\r\n  if (filters) {\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        params.append(key, value.toString());\r\n      }\r\n    });\r\n  }\r\n  \r\n  const response = await api.get(`/api/properties?${params.toString()}`);\r\n  // Унифицируем: если data - массив, возвращаем его, если объект с .properties - возвращаем его\r\n  if (Array.isArray(response.data)) return response.data;\r\n  if (response.data && Array.isArray(response.data.properties)) return response.data.properties;\r\n  return [];\r\n};\r\n\r\nexport const getPropertyById = async (id: string | number): Promise<Property> => {\r\n  const response = await api.get(`/api/properties/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createProperty = async (propertyData: Partial<Property>): Promise<Property> => {\r\n  const response = await api.post('/api/properties', propertyData);\r\n  return response.data;\r\n};\r\n\r\nexport const updateProperty = async (id: number, propertyData: Partial<Property>): Promise<Property> => {\r\n  const response = await api.patch(`/api/properties/${id}`, propertyData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteProperty = async (id: number): Promise<void> => {\r\n  await api.delete(`/api/properties/${id}`);\r\n};\r\n\r\nexport const getMyProperties = async (): Promise<Property[]> => {\r\n  const response = await api.get('/api/properties/my');\r\n  return response.data;\r\n};\r\n\r\nexport const getPropertiesByAgent = async (agentId: number): Promise<Property[]> => {\r\n  return getAllProperties({ agentId });\r\n};\r\n\r\nexport const getPropertiesByAgency = async (agencyId: number): Promise<Property[]> => {\r\n  const response = await api.get(`/api/properties/agency/${agencyId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const uploadPropertyPhotos = async (propertyId: number, files: File[]): Promise<string[]> => {\r\n  const formData = new FormData();\r\n  files.forEach((file, index) => {\r\n    formData.append('photos', file);\r\n  });\r\n  \r\n  const response = await api.post(`/api/properties/${propertyId}/photos`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  \r\n  return response.data.urls;\r\n};\r\n\r\nexport const deletePropertyPhoto = async (propertyId: number, photoUrl: string): Promise<void> => {\r\n  await api.delete(`/api/properties/${propertyId}/photos`, {\r\n    data: { photoUrl }\r\n  });\r\n};\r\n\r\nexport const getPropertyStats = async (): Promise<any> => {\r\n  const response = await api.get('/api/properties/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const searchProperties = async (query: string): Promise<Property[]> => {\r\n  const response = await api.get(`/api/properties/search?q=${encodeURIComponent(query)}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSimilarProperties = async (propertyId: number): Promise<Property[]> => {\r\n  const response = await api.get(`/api/properties/${propertyId}/similar`);\r\n  return response.data;\r\n};\r\n\r\nexport const togglePropertyFavorite = async (propertyId: number): Promise<void> => {\r\n  await api.post(`/api/properties/${propertyId}/favorite`);\r\n};\r\n\r\nexport const getFavoriteProperties = async (): Promise<Property[]> => {\r\n  const response = await api.get('/api/properties/favorites');\r\n  return response.data;\r\n};\r\n\r\nexport const exportProperties = async (filters?: FilterOptions): Promise<Blob> => {\r\n  const params = new URLSearchParams();\r\n  if (filters) {\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        params.append(key, value.toString());\r\n      }\r\n    });\r\n  }\r\n  \r\n  const response = await api.get(`/api/properties/export?${params.toString()}`, {\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  return response.data;\r\n}; \r\n\r\nexport const getRecentProperties = async (): Promise<Property[]> => {\r\n  const response = await api.get('/api/properties?sort=createdAt_desc&limit=10');\r\n  // Унифицируем: если data - массив, возвращаем его, если объект с .properties - возвращаем его\r\n  if (Array.isArray(response.data)) return response.data;\r\n  if (response.data && Array.isArray(response.data.properties)) return response.data.properties;\r\n  return [];\r\n};\r\n\r\nexport const updatePropertyStatus = async (id: number, status: string, token?: string): Promise<Property> => {\r\n  const response = await api.patch(`/api/properties/${id}/status`, { status }, token ? { headers: { Authorization: `Bearer ${token}` } } : undefined);\r\n  return response.data;\r\n}; ","import api from './api';\r\n\r\nexport type Selection = {\r\n  id: number;\r\n  title: string;\r\n  date?: string;\r\n  propertyIds: number[];\r\n  createdAt?: string;\r\n};\r\n\r\nexport async function fetchSelections(): Promise<Selection[]> {\r\n  try {\r\n    const res = await api.get<Selection[]>('/api/selections');\r\n    return res.data;\r\n  } catch (err: any) {\r\n    if (err.response && err.response.status === 404) {\r\n      return [];\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport async function createSelection(title: string, token?: string): Promise<Selection> {\r\n  const headers = token ? { Authorization: `Bearer ${token}` } : undefined;\r\n  const res = await api.post<Selection>('/api/selections', { title, propertyIds: [] }, headers ? { headers } : undefined);\r\n  return res.data;\r\n}\r\n\r\nexport async function addPropertyToSelection(selectionId: number, propertyId: number): Promise<void> {\r\n  const res = await api.get<Selection>(`/api/selections/${selectionId}`);\r\n  const selection = res.data;\r\n  if (!selection.propertyIds.includes(propertyId)) {\r\n    const updated = [...selection.propertyIds, propertyId];\r\n    await api.put(`/api/selections/${selectionId}`, { title: selection.title, propertyIds: updated });\r\n  }\r\n}\r\n\r\nexport async function removePropertyFromSelection(selectionId: number, propertyId: number): Promise<void> {\r\n  const res = await api.get<Selection>(`/api/selections/${selectionId}`);\r\n  const selection = res.data;\r\n  const updated = selection.propertyIds.filter(id => id !== propertyId);\r\n  await api.put(`/api/selections/${selectionId}`, { title: selection.title, propertyIds: updated });\r\n}\r\n\r\nexport async function deleteSelection(selectionId: number): Promise<void> {\r\n  await api.delete(`/api/selections/${selectionId}`);\r\n}\r\n\r\nexport async function getSelectionById(selectionId: number): Promise<Selection & { clientToken?: string }> {\r\n  const res = await api.get(`/api/selections/${selectionId}`);\r\n  return res.data;\r\n}\r\n\r\nexport async function getClientLikes(selectionId: number): Promise<{ propertyId: number; liked: boolean }[]> {\r\n  const res = await api.get(`/api/selections/${selectionId}/client-likes`);\r\n  return res.data;\r\n}\r\n\r\nexport function getClientLink(clientToken: string): string {\r\n  return `${window.location.origin}/client-selection/${clientToken}`;\r\n}\r\n\r\nexport async function downloadSelectionPdf(selectionId: number): Promise<void> {\r\n  const res = await api.get(`/api/selections/${selectionId}/pdf`, { responseType: 'blob' });\r\n  const url = window.URL.createObjectURL(new Blob([res.data], { type: 'application/pdf' }));\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', `selection_${selectionId}.pdf`);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  link.parentNode?.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n}\r\n\r\nexport async function getSelectionByClientToken(token: string): Promise<any> {\r\n  const res = await api.get(`/api/selections/client/${token}`);\r\n  return res.data;\r\n}\r\n\r\nexport async function sendClientLike(token: string, propertyId: number, liked: boolean): Promise<void> {\r\n  await api.post(`/api/selections/client/${token}/like`, { propertyId, liked });\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { Modal, Select, Input, Button, message } from 'antd';\r\nimport { fetchSelections, createSelection, addPropertyToSelection, Selection } from '../services/selection.service';\r\n\r\ninterface AddToSelectionModalProps {\r\n  open: boolean;\r\n  propertyId?: number;\r\n  onClose: () => void;\r\n  createOnly?: boolean;\r\n}\r\n\r\nconst AddToSelectionModal: React.FC<AddToSelectionModalProps> = ({ open, propertyId, onClose, createOnly }) => {\r\n  const [selections, setSelections] = useState<Selection[]>([]);\r\n  const [selectedId, setSelectedId] = useState<number | undefined>();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [creating, setCreating] = useState(false);\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  // Получаем токен пользователя\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      fetchSelections().then(setSelections);\r\n      setSelectedId(undefined);\r\n      setNewTitle('');\r\n    }\r\n  }, [open]);\r\n\r\n  const handleCreate = async () => {\r\n    if (!newTitle.trim()) return;\r\n    setCreating(true);\r\n    try {\r\n      const newSel = await createSelection(newTitle.trim(), token || undefined);\r\n      setSelections(prev => [...prev, newSel]);\r\n      setSelectedId(newSel.id);\r\n      setNewTitle('');\r\n      message.success('Подборка создана');\r\n      if (createOnly) onClose();\r\n    } finally {\r\n      setCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    if (!selectedId || !propertyId) return;\r\n    setAdding(true);\r\n    try {\r\n      await addPropertyToSelection(selectedId, propertyId);\r\n      message.success('Объект добавлен в подборку');\r\n      onClose();\r\n    } finally {\r\n      setAdding(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal open={open} onCancel={onClose} footer={null} title={createOnly ? 'Создать подборку' : 'Добавить в подборку'} destroyOnHidden>\r\n      <div onClick={e => e.stopPropagation()}>\r\n        {!createOnly && (\r\n          <div style={{ marginBottom: 16 }}>\r\n            <div style={{ marginBottom: 8, fontWeight: 500 }}>Выберите подборку</div>\r\n            <Select\r\n              style={{ width: '100%' }}\r\n              placeholder=\"Выберите подборку\"\r\n              value={selectedId}\r\n              onChange={setSelectedId}\r\n              options={selections.map(s => ({ label: s.title, value: s.id }))}\r\n              allowClear\r\n            />\r\n          </div>\r\n        )}\r\n        <div style={{ marginBottom: 16 }}>\r\n          <div style={{ marginBottom: 8, fontWeight: 500 }}>Или создайте новую</div>\r\n          <Input\r\n            placeholder=\"Название подборки\"\r\n            value={newTitle}\r\n            onChange={e => setNewTitle(e.target.value)}\r\n            style={{ width: 'calc(100% - 110px)', marginRight: 8 }}\r\n            onPressEnter={handleCreate}\r\n          />\r\n          <Button type=\"primary\" onClick={handleCreate} disabled={!newTitle.trim()} loading={creating}>\r\n            Создать\r\n          </Button>\r\n        </div>\r\n        {!createOnly && (\r\n          <Button type=\"primary\" block disabled={!selectedId} onClick={e => { e.stopPropagation(); handleAdd(); }} loading={adding}>\r\n            Добавить\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddToSelectionModal; ","/* eslint-disable import/first */\r\nimport React, { useEffect, useRef, MutableRefObject, useState } from 'react';\r\nimport maplibregl, { Map, LngLatLike, GeoJSONSource, MapMouseEvent } from 'maplibre-gl';\r\nimport 'maplibre-gl/dist/maplibre-gl.css';\r\nimport { Property } from '../types';\r\n\r\n// --- Стандартный маркер MapLibre с popup ---\r\nfunction StandardMarkerWithPopup({ map, lngLat, property }: {\r\n  map: maplibregl.Map,\r\n  lngLat: [number, number],\r\n  property: Property\r\n}) {\r\n  const markerRef = useRef<maplibregl.Marker | null>(null);\r\n  useEffect(() => {\r\n    if (!map) return;\r\n    const marker = new maplibregl.Marker({ anchor: 'bottom' })\r\n      .setLngLat(lngLat)\r\n      .addTo(map);\r\n    const popup = new maplibregl.Popup({ offset: 24 })\r\n      .setHTML(`\r\n        <div style='min-width:180px'>\r\n          ${Array.isArray(property.photos) && property.photos.length > 0\r\n            ? `<img src='${property.photos[0]}' alt='Фото' style='width:100%;height:110px;object-fit:cover;border-radius:8px 8px 0 0;margin-bottom:6px;' />`\r\n            : `<div style='width:100%;height:110px;background:#f3f6fa;color:#b0b8c9;display:flex;align-items:center;justify-content:center;border-radius:8px 8px 0 0;margin-bottom:6px;'>Нет фото</div>`}\r\n          <div style='font-weight:600;font-size:16px;margin-bottom:2px;'>${property.title || 'Объект'}</div>\r\n          <div style='color:#64748b;font-size:13px;margin-bottom:4px;'>${property.address || ''}</div>\r\n          <div style='color:#222;font-size:18px;font-weight:400;margin-bottom:2px;'>${property.price ? Number(property.price).toLocaleString('ru-RU') + ' руб' : ''}</div>\r\n          <a href='/properties/${property.id}'\r\n             style='display:inline-block;margin-top:8px;padding:7px 18px;background:#2563eb;color:#fff;border-radius:7px;font-size:14px;font-weight:500;text-decoration:none;transition:background 0.18s;box-shadow:0 2px 8px rgba(37,99,235,0.08);text-align:center;'\r\n             onmouseover=\"this.style.background='#1741a6'\" onmouseout=\"this.style.background='#2563eb'\">\r\n            Подробнее\r\n          </a>\r\n        </div>\r\n      `);\r\n    marker.setPopup(popup);\r\n    markerRef.current = marker;\r\n    return () => {\r\n      if (markerRef.current) markerRef.current.remove();\r\n    };\r\n  }, [map, lngLat, property]);\r\n  return null;\r\n}\r\n\r\ninterface Mapbox3DMapProps {\r\n  properties: Property[];\r\n  selectedId?: number | null;\r\n  onSelect?: (id: number) => void;\r\n  initialCenter?: [number, number];\r\n  initialZoom?: number;\r\n  style?: React.CSSProperties;\r\n  mapRef?: MutableRefObject<maplibregl.Map | null>;\r\n  freehandMode?: boolean;\r\n  onPolygonDraw?: (coords: [number, number][]) => void;\r\n  polygonCoords?: [number, number][];\r\n}\r\n\r\nconst DEFAULT_CENTER: [number, number] = [57.6261, 39.8845]; // Ярославль\r\nconst DEFAULT_ZOOM = 12;\r\nconst STORAGE_KEY = 'mapbox_last_view';\r\n\r\nconst Mapbox3DMap: React.FC<Mapbox3DMapProps> = ({\r\n  properties,\r\n  selectedId,\r\n  onSelect,\r\n  initialCenter,\r\n  initialZoom,\r\n  style = { height: 500, width: '100%', borderRadius: 16 },\r\n  mapRef,\r\n  freehandMode = false,\r\n  onPolygonDraw,\r\n  polygonCoords = [],\r\n}) => {\r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const internalMapRef = useRef<maplibregl.Map | null>(null);\r\n  const [mapReady, setMapReady] = useState(false);\r\n  const initialCenterRef = useRef<[number, number]>(DEFAULT_CENTER);\r\n  const initialZoomRef = useRef<number>(DEFAULT_ZOOM);\r\n  const [drawing, setDrawing] = useState(false);\r\n  const [drawPoints, setDrawPoints] = useState<[number, number][]>([]);\r\n  const [polygonId, setPolygonId] = useState<string | null>(null);\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  // Получаем стартовые значения центра/зума только один раз (оптимизировано)\r\n  useEffect(() => {\r\n    let usedDefault = false;\r\n    const saved = localStorage.getItem(STORAGE_KEY);\r\n    if (saved) {\r\n      try {\r\n        const { center: c, zoom: z } = JSON.parse(saved);\r\n        if (Array.isArray(c) && typeof z === 'number') {\r\n          initialCenterRef.current = [c[0], c[1]];\r\n          initialZoomRef.current = z;\r\n          usedDefault = true;\r\n        }\r\n      } catch {}\r\n    }\r\n    if (!usedDefault) {\r\n      initialCenterRef.current = initialCenter || DEFAULT_CENTER;\r\n      initialZoomRef.current = initialZoom || DEFAULT_ZOOM;\r\n      fetch('https://ip-api.com/json/?fields=lat,lon,status')\r\n        .then(r => r.json())\r\n        .then(data => {\r\n          if (data.status === 'success' && typeof data.lat === 'number' && typeof data.lon === 'number') {\r\n            localStorage.setItem(STORAGE_KEY, JSON.stringify({ center: [data.lon, data.lat], zoom: 11 }));\r\n          }\r\n        });\r\n    }\r\n  }, [initialCenter, initialZoom]);\r\n\r\n  // Карта создаётся только один раз\r\n  useEffect(() => {\r\n    if (!mapContainer.current || internalMapRef.current) return;\r\n    const map = new maplibregl.Map({\r\n      container: mapContainer.current,\r\n      style: 'https://tiles.stadiamaps.com/styles/osm_bright.json',\r\n      center: initialCenterRef.current,\r\n      zoom: initialZoomRef.current,\r\n      pitch: 45,\r\n      bearing: -17.6\r\n    });\r\n    internalMapRef.current = map;\r\n    if (mapRef) mapRef.current = map;\r\n    map.on('load', () => setMapReady(true));\r\n    map.on('moveend', () => {\r\n      const c = map.getCenter();\r\n      const z = map.getZoom();\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify({ center: [c.lng, c.lat], zoom: z }));\r\n    });\r\n    map.on('zoomend', () => {\r\n      const c = map.getCenter();\r\n      const z = map.getZoom();\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify({ center: [c.lng, c.lat], zoom: z }));\r\n    });\r\n    return () => {\r\n      map.remove();\r\n      internalMapRef.current = null;\r\n      if (mapRef) mapRef.current = null;\r\n    };\r\n  }, [mapRef]);\r\n\r\n  // Перемещаем карту к выбранному маркеру при изменении selectedId\r\n  useEffect(() => {\r\n    if (!internalMapRef.current || !selectedId) return;\r\n    const selected = properties.find(p => Number(p.id) === Number(selectedId));\r\n    if (selected && typeof selected.lat === 'number' && typeof selected.lng === 'number') {\r\n      internalMapRef.current.flyTo({ center: [selected.lng, selected.lat], zoom: internalMapRef.current.getZoom(), speed: 1.2 });\r\n    }\r\n  }, [selectedId, properties]);\r\n\r\n  // --- Freehand drawing (улучшено) ---\r\n  useEffect(() => {\r\n    if (!internalMapRef.current) return;\r\n    const map = internalMapRef.current;\r\n    let isDrawing = false;\r\n    let points: [number, number][] = [];\r\n    let polyId = polygonId || 'drawn-polygon';\r\n    function onMouseDown(e: MapMouseEvent) {\r\n      if (!freehandMode) return;\r\n      if (e.originalEvent.button !== 0) return; // Только левая кнопка мыши!\r\n      isDrawing = true;\r\n      points = [[e.lngLat.lng, e.lngLat.lat]];\r\n      setDrawPoints([[e.lngLat.lng, e.lngLat.lat]]);\r\n      setDrawing(true);\r\n      setShowOverlay(true);\r\n      map.getCanvas().style.cursor = 'pointer';\r\n    }\r\n    function onMouseMove(e: MapMouseEvent) {\r\n      if (!freehandMode || !isDrawing) return;\r\n      points.push([e.lngLat.lng, e.lngLat.lat]);\r\n      setDrawPoints([...points]);\r\n    }\r\n    function onMouseUp(e: MapMouseEvent) {\r\n      if (!freehandMode || !isDrawing) return;\r\n      isDrawing = false;\r\n      points.push([e.lngLat.lng, e.lngLat.lat]);\r\n      setDrawPoints([...points]);\r\n      setDrawing(false);\r\n      setShowOverlay(false);\r\n      setPolygonId(polyId);\r\n      addPolygonToMap(map, points, polyId);\r\n      map.getCanvas().style.cursor = '';\r\n      if (onPolygonDraw) onPolygonDraw(points);\r\n    }\r\n    if (freehandMode) {\r\n      map.on('mousedown', onMouseDown);\r\n      map.on('mousemove', onMouseMove);\r\n      map.on('mouseup', onMouseUp);\r\n      setShowOverlay(true);\r\n      map.getCanvas().style.cursor = 'pointer';\r\n    }\r\n    return () => {\r\n      map.off('mousedown', onMouseDown);\r\n      map.off('mousemove', onMouseMove);\r\n      map.off('mouseup', onMouseUp);\r\n      setShowOverlay(false);\r\n      map.getCanvas().style.cursor = '';\r\n    };\r\n  }, [freehandMode, internalMapRef.current, onPolygonDraw, polygonId]);\r\n\r\n  // --- Overlay-подсказка ---\r\n\r\n  // --- Polyline отрисовка линии рисования ---\r\n  useEffect(() => {\r\n    if (!internalMapRef.current) return;\r\n    const map = internalMapRef.current;\r\n    const id = 'draw-polyline';\r\n    if (drawPoints.length > 1 && freehandMode) {\r\n      const geojson: GeoJSON.Feature<GeoJSON.LineString> = {\r\n        type: 'Feature',\r\n        geometry: { type: 'LineString', coordinates: drawPoints },\r\n        properties: {},\r\n      };\r\n      if (map.getSource(id)) {\r\n        (map.getSource(id) as GeoJSONSource).setData(geojson);\r\n      } else {\r\n        map.addSource(id, { type: 'geojson', data: geojson });\r\n        map.addLayer({\r\n          id,\r\n          type: 'line',\r\n          source: id,\r\n          paint: {\r\n            'line-color': '#2563eb',\r\n            'line-width': 3.5,\r\n            'line-dasharray': [2, 2],\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      if (map.getLayer(id)) map.removeLayer(id);\r\n      if (map.getSource(id)) map.removeSource(id);\r\n    }\r\n  }, [drawPoints, freehandMode]);\r\n\r\n  // --- Рисование/удаление полигона по polygonCoords ---\r\n  useEffect(() => {\r\n    if (!internalMapRef.current) return;\r\n    const map = internalMapRef.current;\r\n    const polyId = 'drawn-polygon';\r\n    const outlineId = 'drawn-polygon-outline';\r\n\r\n    // Удаляем старые слои/источники только если область сброшена\r\n    if (Array.isArray(polygonCoords) && polygonCoords.length <= 2) {\r\n      if (map.getLayer(polyId)) map.removeLayer(polyId);\r\n      if (map.getSource(polyId)) map.removeSource(polyId);\r\n      if (map.getLayer(outlineId)) map.removeLayer(outlineId);\r\n      if (map.getSource(outlineId)) map.removeSource(outlineId);\r\n      return;\r\n    }\r\n\r\n    // Если есть координаты — обновляем или создаём source/layer\r\n    const geojson: GeoJSON.Feature<GeoJSON.Polygon> = {\r\n      type: 'Feature',\r\n      geometry: { type: 'Polygon', coordinates: [[...polygonCoords, polygonCoords[0]]] },\r\n      properties: {},\r\n    };\r\n\r\n    if (map.getSource(polyId)) {\r\n      (map.getSource(polyId) as GeoJSONSource).setData(geojson);\r\n    } else {\r\n      map.addSource(polyId, { type: 'geojson', data: geojson });\r\n      map.addLayer({\r\n        id: polyId,\r\n        type: 'fill',\r\n        source: polyId,\r\n        paint: {\r\n          'fill-color': '#2563eb',\r\n          'fill-opacity': 0.18,\r\n        },\r\n      });\r\n      map.addLayer({\r\n        id: outlineId,\r\n        type: 'line',\r\n        source: polyId,\r\n        paint: {\r\n          'line-color': '#2563eb',\r\n          'line-width': 2.5,\r\n        },\r\n      });\r\n    }\r\n  }, [polygonCoords]);\r\n\r\n  // --- Сброс линии при выходе из режима ---\r\n  useEffect(() => {\r\n    if (!internalMapRef.current) return;\r\n    const map = internalMapRef.current;\r\n    const id = 'draw-polyline';\r\n    // Отключаем drag и zoom при freehandMode\r\n    if (freehandMode) {\r\n      map.boxZoom.disable();\r\n      map.dragPan.disable();\r\n      map.scrollZoom.disable();\r\n      map.keyboard.disable();\r\n      map.doubleClickZoom.disable();\r\n      map.touchZoomRotate.disable();\r\n    } else {\r\n      map.boxZoom.enable();\r\n      map.dragPan.enable();\r\n      map.scrollZoom.enable();\r\n      map.keyboard.enable();\r\n      map.doubleClickZoom.enable();\r\n      map.touchZoomRotate.enable();\r\n    }\r\n    if (!freehandMode) {\r\n      if (map.getLayer(id)) map.removeLayer(id);\r\n      if (map.getSource(id)) map.removeSource(id);\r\n      setDrawPoints([]);\r\n    }\r\n  }, [freehandMode]);\r\n\r\n  // --- Удаление полигона при сбросе polygonCoords ---\r\n  useEffect(() => {\r\n    if (!internalMapRef.current) return;\r\n    const map = internalMapRef.current;\r\n    const polyId = 'drawn-polygon';\r\n    const outlineId = 'drawn-polygon-outline';\r\n    if (Array.isArray(polygonCoords) && polygonCoords.length === 0) {\r\n      if (map.getLayer(polyId)) map.removeLayer(polyId);\r\n      if (map.getSource(polyId)) map.removeSource(polyId);\r\n      if (map.getLayer(outlineId)) map.removeLayer(outlineId);\r\n      if (map.getSource(outlineId)) map.removeSource(outlineId);\r\n    }\r\n  }, [polygonCoords]);\r\n\r\n  // --- Маркеры и карта ---\r\n  return (\r\n    <div style={style}>\r\n      <div ref={mapContainer} style={{ width: '100%', height: '100%' }} />\r\n      {mapReady && internalMapRef.current && properties.map((p) => (\r\n        (typeof p.lat === 'number' && typeof p.lng === 'number') && (\r\n          <StandardMarkerWithPopup\r\n            key={p.id}\r\n            map={internalMapRef.current!}\r\n            lngLat={[p.lng, p.lat]}\r\n            property={p}\r\n          />\r\n        )\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Функция для добавления geojson-полигона на карту\r\nfunction addPolygonToMap(map: Map, points: [number, number][], polygonId: string) {\r\n  if (points.length < 3) return;\r\n  if (map.getSource(polygonId)) {\r\n    (map.getSource(polygonId) as GeoJSONSource).setData({\r\n      type: 'Feature',\r\n      geometry: { type: 'Polygon', coordinates: [[...points, points[0]]] },\r\n      properties: {},\r\n    });\r\n    return;\r\n  }\r\n  map.addSource(polygonId, {\r\n    type: 'geojson',\r\n    data: {\r\n      type: 'Feature',\r\n      geometry: { type: 'Polygon', coordinates: [[...points, points[0]]] },\r\n      properties: {},\r\n    },\r\n  });\r\n  map.addLayer({\r\n    id: polygonId,\r\n    type: 'fill',\r\n    source: polygonId,\r\n    paint: {\r\n      'fill-color': '#2563eb',\r\n      'fill-opacity': 0.18,\r\n    },\r\n  });\r\n  map.addLayer({\r\n    id: polygonId + '-outline',\r\n    type: 'line',\r\n    source: polygonId,\r\n    paint: {\r\n      'line-color': '#2563eb',\r\n      'line-width': 2.5,\r\n    },\r\n  });\r\n}\r\n\r\nexport default Mapbox3DMap; ","import React, { useEffect, useState, useRef } from 'react';\nimport { getRecentProperties } from '../services/property.service';\nimport { Property } from '../types';\nimport Mapbox3DMap from '../components/Mapbox3DMap';\nimport { Popover, Button, Input, InputNumber, Select, Checkbox, Tooltip } from 'antd';\nimport { FilterOutlined, PictureOutlined, SearchOutlined, HomeOutlined, NumberOutlined, ExpandOutlined, ApartmentOutlined, CarOutlined, BuildOutlined, CalendarOutlined, PictureOutlined as PictureIcon, DownOutlined, UpOutlined, ReloadOutlined } from '@ant-design/icons';\nimport AddToSelectionModal from '../components/AddToSelectionModal';\nimport { Tag, Modal, Avatar, Space, Typography } from 'antd';\nimport { PropertySafetyOutlined, SyncOutlined, PhoneOutlined, PlusOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { useClientMode } from '../context/ClientModeContext';\n// REMOVE: import PropertyCardCompact from '../components/PropertyCardCompact';\n\nconst DEFAULT_CENTER: [number, number] = [57.6261, 39.8845]; // Ярославль\nconst DEFAULT_ZOOM = 12;\nconst STORAGE_KEY = 'mapbox_last_view';\n\n// Функция для вычисления расстояния между двумя точками (haversine)\nfunction getDistance([lng1, lat1]: [number, number], [lng2, lat2]: [number, number]): number {\n  const toRad = (v: number) => (v * Math.PI) / 180;\n  const R = 6371; // Радиус Земли в км\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLng / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n// Функция для динамического радиуса (чем больше zoom, тем меньше радиус)\nfunction getRadiusByZoom(zoom: number | null): number {\n  if (!zoom) return 10;\n  if (zoom >= 16) return 0.5;\n  if (zoom >= 14) return 1.2;\n  if (zoom >= 12) return 2.5;\n  if (zoom >= 10) return 5;\n  return 10;\n}\n\n// Функция для tolerance (допуска) в метрах в зависимости от зума\nfunction getToleranceByZoom(zoom: number): number {\n  if (zoom >= 16) return 10;\n  if (zoom >= 14) return 25;\n  if (zoom >= 12) return 50;\n  if (zoom >= 10) return 100;\n  return 200;\n}\n// Функция для перевода метров в градусы (очень грубо, для Ярославля)\nfunction metersToDegrees(meters: number): number {\n  // 1 градус ~ 111320 метров (по широте)\n  return meters / 111320;\n}\n\nconst pointInPolygon = (point: [number, number], polygon: [number, number][]) => {\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i][0], yi = polygon[i][1];\n    const xj = polygon[j][0], yj = polygon[j][1];\n    const intersect = ((yi > point[1]) !== (yj > point[1])) &&\n      (point[0] < (xj - xi) * (point[1] - yi) / (yj - yi + 0.0000001) + xi);\n    if (intersect) inside = !inside;\n  }\n  return inside;\n};\n\nconst propertyTypeOptions = [\n  { value: 'apartment', label: 'Квартира' },\n  { value: 'house', label: 'Дом' },\n  { value: 'commercial', label: 'Коммерция' },\n  { value: 'land', label: 'Участок' },\n];\nconst statusOptions = [\n  { value: 'for_sale', label: 'В продаже' },\n  { value: 'in_deal', label: 'На задатке' },\n  { value: 'reserved', label: 'На брони' },\n  { value: 'sold', label: 'Продан' },\n];\nconst materialOptions = [\n  { value: 'panel', label: 'Панель' },\n  { value: 'brick', label: 'Кирпич' },\n  { value: 'monolith', label: 'Монолит' },\n  { value: 'block', label: 'Блок' },\n  { value: 'wood', label: 'Дерево' },\n];\nconst sortOptions = [\n  { value: 'newest', label: 'Сначала новые' },\n  { value: 'cheapest', label: 'Сначала дешёвые' },\n  { value: 'expensive', label: 'Сначала дорогие' },\n  { value: 'largest', label: 'Сначала большие' },\n];\n\nconst DashboardPage: React.FC = () => {\n  const [properties, setProperties] = useState<Property[]>([]);\n  const [selectedPropertyId, setSelectedPropertyId] = useState<number | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { isClientMode } = useClientMode();\n\n  // Для центра карты и зума\n  const [center, setCenter] = useState<[number, number]>(DEFAULT_CENTER);\n  const [zoom, setZoom] = useState<number>(DEFAULT_ZOOM);\n  const mapboxRef = useRef<any>(null); // для доступа к mapRef внутри Mapbox3DMap\n\n  // При монтировании: localStorage или дефолт\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const { center: c, zoom: z } = JSON.parse(saved);\n        if (Array.isArray(c) && typeof z === 'number') {\n          setCenter([c[0], c[1]]);\n          setZoom(z);\n          return;\n        }\n      } catch {}\n    }\n    // Если нет localStorage — дефолт (Ярославль)\n    setCenter(DEFAULT_CENTER);\n    setZoom(DEFAULT_ZOOM);\n  }, []);\n\n  // Параллельно определяем город по IP и делаем flyTo, если localStorage не было\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) return; // если был localStorage — ничего не делаем\n    fetch('https://ip-api.com/json/?fields=lat,lon,status')\n      .then(r => r.json())\n      .then(data => {\n        if (data.status === 'success' && typeof data.lat === 'number' && typeof data.lon === 'number') {\n          // flyTo на город по IP\n          if (mapboxRef.current && mapboxRef.current.flyTo) {\n            mapboxRef.current.flyTo({ center: [data.lon, data.lat], zoom: 11, speed: 1.2 });\n          }\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    getRecentProperties()\n      .then((data) => {\n        if (Array.isArray(data)) {\n          setProperties(data);\n        } else if (data && typeof data === 'object' && Array.isArray((data as any).properties)) {\n          setProperties((data as any).properties);\n        } else {\n          setProperties([]);\n        }\n      })\n      .catch(() => setError('Ошибка загрузки объектов'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const [freehandMode, setFreehandMode] = useState(false);\n  const [polygonCoords, setPolygonCoords] = useState<[number, number][]>([]);\n  const [showFilters, setShowFilters] = useState(false);\n\n  // --- состояние фильтров ---\n  const [filters, setFilters] = useState<any>({});\n  const updateFilters = (patch: any) => setFilters((prev: any) => ({ ...prev, ...patch }));\n  const resetFilters = () => setFilters({});\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  // Фильтрация по freehand-полигону с tolerance\n  let filteredProperties = properties;\n  if (polygonCoords.length > 2) {\n    const tolerance = getToleranceByZoom(zoom);\n    const toleranceDeg = metersToDegrees(tolerance);\n    filteredProperties = filteredProperties.filter(p => {\n      if (typeof p.lat !== 'number' || typeof p.lng !== 'number') return false;\n      // 1. Если точка внутри полигона — включаем\n      if (pointInPolygon([p.lng, p.lat], polygonCoords)) return true;\n      // 2. Проверяем точки по окружности вокруг объекта\n      const N = 8; // количество точек по окружности\n      for (let i = 0; i < N; i++) {\n        const angle = (2 * Math.PI * i) / N;\n        const dx = Math.cos(angle) * toleranceDeg;\n        const dy = Math.sin(angle) * toleranceDeg;\n        const testLng = p.lng + dx;\n        const testLat = p.lat + dy;\n        if (pointInPolygon([testLng, testLat], polygonCoords)) return true;\n      }\n      return false;\n    });\n  }\n\n  const navigate = useNavigate();\n  const [addToSelectionId, setAddToSelectionId] = useState<number | null>(null);\n  const [phoneModal, setPhoneModal] = useState<{ open: boolean; agent?: any }>({ open: false });\n\n  // Добавить стили для анимаций кнопок\n  const animatedBtnStyle = {\n    transition: 'transform 0.13s cubic-bezier(.4,2,.6,1), box-shadow 0.13s',\n    boxShadow: '0 1px 4px rgba(37,99,235,0.08)',\n  };\n  const animatedBtnHover = {\n    transform: 'scale(1.12)',\n    boxShadow: '0 2px 8px rgba(37,99,235,0.16)',\n  };\n  const animatedBtnActive = {\n    transform: 'scale(0.93)',\n  };\n\n  return (\n    <div style={{ \n      display: 'flex',\n      height: 'calc(100vh - 64px)',\n      background: '#f7fafd',\n      padding: 0,\n      margin: 0,\n      overflow: 'hidden',\n    }}>\n      {/* Карта */}\n      <div style={{\n        flex: 1,\n        minWidth: 0,\n        height: '100%',\n        background: '#f7fafd',\n            position: 'relative',\n      }}>\n        <Popover\n          content={\n            <div style={{ minWidth: 320, maxWidth: 420 }}>\n              <Input\n                prefix={<SearchOutlined style={{ color: '#b0b6c3' }} />}\n                placeholder=\"Поиск (адрес, название, агент, описание)\"\n                value={filters.search || ''}\n                onChange={e => updateFilters({ search: e.target.value })}\n                style={{ width: '100%', borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1', fontWeight: 500, marginBottom: 10 }}\n                allowClear\n              />\n              <div style={{ display: 'flex', gap: 8, marginBottom: 10 }}>\n                <InputNumber\n                  prefix={<HomeOutlined style={{ color: '#b0b6c3' }} />}\n                  placeholder=\"Цена от\"\n                  min={0}\n                  value={filters.minPrice}\n                  onChange={value => updateFilters({ minPrice: value === null ? undefined : value })}\n                  style={{ width: 100, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n                <InputNumber\n                  placeholder=\"до\"\n                  min={0}\n                  value={filters.maxPrice}\n                  onChange={value => updateFilters({ maxPrice: value === null ? undefined : value })}\n                  style={{ width: 100, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n                <InputNumber\n                  prefix={<ExpandOutlined style={{ color: '#b0b6c3' }} />}\n                  placeholder=\"Площадь от\"\n                  min={0}\n                  value={filters.minArea}\n                  onChange={value => updateFilters({ minArea: value === null ? undefined : value })}\n                  style={{ width: 90, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n                <InputNumber\n                  placeholder=\"до\"\n                  min={0}\n                  value={filters.maxArea}\n                  onChange={value => updateFilters({ maxArea: value === null ? undefined : value })}\n                  style={{ width: 90, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n                <InputNumber\n                  prefix={<NumberOutlined style={{ color: '#b0b6c3' }} />}\n                  placeholder=\"Комнат\"\n                  min={1}\n                  max={10}\n                  value={filters.rooms}\n                  onChange={value => updateFilters({ rooms: value === null ? undefined : value })}\n                  style={{ width: 70, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n            </div>\n              <div style={{ display: 'flex', gap: 8, marginBottom: 10 }}>\n                <Select\n                  placeholder=\"Тип\"\n                  allowClear\n                  value={filters.type}\n                  onChange={value => updateFilters({ type: value })}\n                  options={propertyTypeOptions}\n                  style={{ width: 120, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n                <Select\n                  placeholder=\"Статус\"\n                  allowClear\n                  value={filters.status}\n                  onChange={value => updateFilters({ status: value })}\n                  options={statusOptions}\n                  style={{ width: 120, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n                <Select\n                  placeholder=\"Сортировка\"\n                  allowClear\n                  value={filters.sort}\n                  onChange={value => updateFilters({ sort: value })}\n                  options={sortOptions}\n                  style={{ width: 140, borderRadius: 14, background: 'rgba(247,249,252,0.9)', border: '1.5px solid #e6eaf1' }}\n                />\n              </div>\n              <div style={{ display: 'flex', gap: 8, marginBottom: 10 }}>\n                <Button icon={showAdvanced ? <UpOutlined /> : <DownOutlined />} shape=\"circle\" onClick={() => setShowAdvanced(v => !v)} style={{ background: '#f3f6fa', border: '1.5px solid #e0e7ef' }} />\n                <Button icon={<ReloadOutlined />} onClick={resetFilters} style={{ borderRadius: 14, fontWeight: 500, height: 38, background: '#f3f6fa', border: '1.5px solid #e0e7ef' }}>Сбросить</Button>\n                <Button\n                  type={freehandMode ? 'primary' : 'default'}\n                  icon={<PictureOutlined />}\n                  style={{ fontWeight: 600, fontSize: 16, borderRadius: 8, flex: 1 }}\n                  onClick={() => {\n                    setShowFilters(false);\n                    setTimeout(() => setFreehandMode(true), 100);\n                  }}\n                >\n                  Нарисовать область на карте\n                </Button>\n                {polygonCoords.length > 2 && (\n                  <Button danger style={{ flex: 1 }} onClick={() => setPolygonCoords([])}>\n                    Сбросить область\n                  </Button>\n            )}\n          </div>\n              {showAdvanced && (\n                <div style={{ width: '100%', marginTop: 8, display: 'flex', flexWrap: 'wrap', gap: 10, alignItems: 'center', background: 'rgba(255,255,255,0.35)', borderRadius: 12, padding: 12, boxShadow: '0 2px 12px #e0e7ef' }}>\n                  <InputNumber\n                    prefix={<CalendarOutlined style={{ color: '#b0b6c3' }} />}\n                    placeholder=\"Год постр. от\"\n                    min={1900}\n                    max={2100}\n                    value={filters.minYear}\n                    onChange={value => updateFilters({ minYear: value === null ? undefined : value })}\n                    style={{ width: 100, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <InputNumber\n                    placeholder=\"до\"\n                    min={1900}\n                    max={2100}\n                    value={filters.maxYear}\n                    onChange={value => updateFilters({ maxYear: value === null ? undefined : value })}\n                    style={{ width: 80, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <InputNumber\n                    prefix={<BuildOutlined style={{ color: '#b0b6c3' }} />}\n                    placeholder=\"Этаж от\"\n                    min={1}\n                    value={filters.minFloor}\n                    onChange={value => updateFilters({ minFloor: value === null ? undefined : value })}\n                    style={{ width: 80, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <InputNumber\n                    placeholder=\"до\"\n                    min={1}\n                    value={filters.maxFloor}\n                    onChange={value => updateFilters({ maxFloor: value === null ? undefined : value })}\n                    style={{ width: 80, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <InputNumber\n                    prefix={<ApartmentOutlined style={{ color: '#b0b6c3' }} />}\n                    placeholder=\"Этажей в доме от\"\n                    min={1}\n                    value={filters.minFloors}\n                    onChange={value => updateFilters({ minFloors: value === null ? undefined : value })}\n                    style={{ width: 80, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <InputNumber\n                    placeholder=\"до\"\n                    min={1}\n                    value={filters.maxFloors}\n                    onChange={value => updateFilters({ maxFloors: value === null ? undefined : value })}\n                    style={{ width: 80, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <Select\n                    placeholder=\"Материал\"\n                    allowClear\n                    value={filters.material}\n                    onChange={value => updateFilters({ material: value })}\n                    options={materialOptions}\n                    style={{ width: 120, borderRadius: 12, background: '#f7f9fc', border: '1.5px solid #e6eaf1' }}\n                  />\n                  <Checkbox checked={!!filters.balcony} onChange={e => updateFilters({ balcony: e.target.checked })}>Балкон</Checkbox>\n                  <Checkbox checked={!!filters.lift} onChange={e => updateFilters({ lift: e.target.checked })}>Лифт</Checkbox>\n                  <Checkbox checked={!!filters.parking} onChange={e => updateFilters({ parking: e.target.checked })}>\n                    <CarOutlined style={{ marginRight: 4 }} />Парковка\n                  </Checkbox>\n                  <Checkbox checked={!!filters.furniture} onChange={e => updateFilters({ furniture: e.target.checked })}>Мебель</Checkbox>\n                  <Checkbox checked={!!filters.tech} onChange={e => updateFilters({ tech: e.target.checked })}>Техника</Checkbox>\n                  <Checkbox checked={!!filters.onlyWithPhoto} onChange={e => updateFilters({ onlyWithPhoto: e.target.checked })}>\n                    <PictureIcon style={{ marginRight: 4 }} />Только с фото\n                  </Checkbox>\n                  <Checkbox checked={!!filters.isNew} onChange={e => updateFilters({ isNew: e.target.checked })}>Новостройка</Checkbox>\n                  <Checkbox checked={!!filters.isSecondary} onChange={e => updateFilters({ isSecondary: e.target.checked })}>Вторичка</Checkbox>\n        </div>\n              )}\n            </div>\n          }\n          title=\"Фильтры и рисование\"\n          trigger=\"click\"\n          open={showFilters}\n          onOpenChange={setShowFilters}\n        >\n          <Button icon={<FilterOutlined />} size=\"large\" style={{ fontWeight: 600, fontSize: 18, height: 48, borderRadius: 12, position: 'absolute', top: 18, right: 18, zIndex: 20 }}>\n            Фильтры и рисование\n          </Button>\n        </Popover>\n        <Mapbox3DMap\n          mapRef={mapboxRef}\n          properties={properties}\n          selectedId={selectedPropertyId}\n          onSelect={setSelectedPropertyId}\n          initialCenter={center}\n          initialZoom={zoom}\n          style={{\n            width: '100%',\n            height: '100%',\n            borderRadius: 0\n          }}\n          freehandMode={freehandMode}\n          onPolygonDraw={coords => {\n            setPolygonCoords(coords);\n            setFreehandMode(false);\n          }}\n          polygonCoords={polygonCoords}\n        />\n            </div>\n      {/* Боковая панель с объектами справа */}\n            <div style={{\n        width: 420,\n        minWidth: 420,\n        maxWidth: 420,\n        height: '100%',\n        background: '#f9fbfd',\n        borderLeft: '1.5px solid #e5e7eb',\n        padding: '24px 20px 24px 20px',\n        overflowY: 'auto',\n        flexShrink: 0,\n      }}>\n        <div style={{ fontWeight: 700, fontSize: 26, marginBottom: 18, color: '#222', letterSpacing: -0.5 }}>Список объектов</div>\n        {loading && <div style={{ color: '#888', margin: '24px 0' }}>Загрузка...</div>}\n        {error && <div style={{ color: '#e53e3e', margin: '24px 0' }}>{error}</div>}\n        {!loading && !error && filteredProperties.length === 0 && <div style={{ color: '#888', margin: '24px 0' }}>Нет объектов для отображения</div>}\n        {filteredProperties.map((p) => {\n          const statusMap: Record<string, { label: string; color: string }> = {\n            for_sale: { label: 'В продаже', color: 'green' },\n            in_deal: { label: 'На задатке', color: 'orange' },\n            reserved: { label: 'На брони', color: 'blue' },\n            sold: { label: 'Продан', color: 'red' },\n          };\n          const status = statusMap[p.status as string] || { label: String(p.status), color: 'gray' };\n          const legalStatus = p.legalCheck?.status || 'Не проверен';\n          let legalIcon = <PropertySafetyOutlined style={{ fontSize: 18, color: '#faad14' }} />;\n          let legalColor = '#faad14';\n          let legalText = 'Не проверен';\n          if (legalStatus === 'Проверен') {\n            legalIcon = <PropertySafetyOutlined style={{ fontSize: 18, color: '#52c41a' }} />;\n            legalColor = '#52c41a';\n            legalText = 'Проверен';\n          } else if (legalStatus === 'На проверке') {\n            legalIcon = <SyncOutlined spin style={{ fontSize: 18, color: '#1890ff' }} />;\n            legalColor = '#1890ff';\n            legalText = 'На проверке';\n          }\n          // Форматирование цены с обычными пробелами\n          const formatPrice = (price?: number) => price ? price.toLocaleString('ru-RU').replace(/\\u00A0/g, ' ').replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ') + ' руб' : '';\n          return (\n            <div\n              key={p.id}\n              style={{\n                background: selectedPropertyId === p.id ? '#eaf2ff' : '#fff',\n                border: selectedPropertyId === p.id ? '2px solid #2563eb' : '2px solid #e5e7eb',\n                borderRadius: 14,\n                padding: 16,\n                marginBottom: 16,\n                cursor: 'pointer',\n                boxShadow: selectedPropertyId === p.id ? '0 2px 12px rgba(37,99,235,0.08)' : '0 1px 4px rgba(0,0,0,0.03)',\n                transition: 'all 0.18s',\n                display: 'flex',\n                gap: 16,\n                alignItems: 'flex-start',\n                position: 'relative',\n                minHeight: 120,\n              }}\n              onClick={() => setSelectedPropertyId(p.id)}\n            >\n              {/* Фото */}\n              <div style={{ width: 56, height: 56, borderRadius: 10, background: '#f3f6fa', overflow: 'hidden', flexShrink: 0, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                {Array.isArray(p.photos) && p.photos.length > 0 ? (\n                  <img src={p.photos[0]} alt={p.title} style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\n                ) : (\n                  <div style={{ color: '#b0b8c9', fontSize: 13 }}>No photo</div>\n                )}\n              </div>\n              {/* Контент */}\n              <div style={{ flex: 1, minWidth: 0, display: 'flex', flexDirection: 'column', gap: 4 }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginBottom: 2 }}>\n                  <Tag color=\"purple\" style={{ fontWeight: 600, fontSize: 12 }}>Эксклюзивный объект</Tag>\n                  <Tag color={status.color} style={{ fontWeight: 600, fontSize: 12 }}>{status.label}</Tag>\n                </div>\n                <div style={{ fontWeight: 600, fontSize: 16, color: '#222', marginBottom: 2, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>{p.title}</div>\n                <div style={{ color: '#64748b', fontSize: 13, marginBottom: 2, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>{p.address}</div>\n                {/* Юридический статус */}\n                <div style={{ display: 'flex', alignItems: 'center', gap: 6, margin: '8px 0 2px 0' }}>\n                  {legalIcon}\n                  <span style={{ color: legalColor, fontWeight: 600, fontSize: 12 }}>{legalText}</span>\n                </div>\n                {/* Агент и агентство */}\n                {!isClientMode && (\n                  <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginTop: 8 }}>\n                    {p.agent?.photo && <Avatar src={p.agent.photo} size={28} />}\n                    <span style={{ fontSize: 13, color: '#222', fontWeight: 500 }}>{p.agent?.firstName} {p.agent?.lastName}</span>\n                    {p.agent?.agency?.name && <span style={{ fontSize: 12, color: '#888', marginLeft: 6 }}>({p.agent.agency.name})</span>}\n                  </div>\n                )}\n                <div style={{ color: '#222', fontWeight: 500, fontSize: 17, margin: '2px 0 2px 0' }}>{formatPrice(p.price)}</div>\n                {/* Кнопки */}\n                <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>\n                  <Button\n                    shape=\"circle\"\n                    icon={<InfoCircleOutlined />}\n                    size=\"middle\"\n                    style={{\n                      background: '#f3f6fa',\n                      color: '#2563eb',\n                      border: '1.5px solid #dbeafe',\n                      ...animatedBtnStyle,\n                      marginLeft: 0,\n                    }}\n                    onMouseOver={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'scale(1.12)';\n                      e.currentTarget.style.boxShadow = '0 2px 8px rgba(37,99,235,0.16)';\n                    }}\n                    onMouseOut={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'none';\n                      e.currentTarget.style.boxShadow = '0 1px 4px rgba(37,99,235,0.08)';\n                    }}\n                    onMouseDown={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'scale(0.93)';\n                      e.currentTarget.style.boxShadow = '0 1px 4px rgba(37,99,235,0.08)';\n                    }}\n                    onMouseUp={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'scale(1.12)';\n                      e.currentTarget.style.boxShadow = '0 2px 8px rgba(37,99,235,0.16)';\n                    }}\n                    onClick={e => { e.stopPropagation(); navigate(`/properties/${p.id}`); }}\n                  />\n                  <Button\n                    shape=\"circle\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                    style={{\n                      background: '#f3f6fa',\n                      color: '#2563eb',\n                      border: '1.5px solid #dbeafe',\n                      ...animatedBtnStyle,\n                    }}\n                    onMouseOver={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'scale(1.12)';\n                      e.currentTarget.style.boxShadow = '0 2px 8px rgba(37,99,235,0.16)';\n                    }}\n                    onMouseOut={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'none';\n                      e.currentTarget.style.boxShadow = '0 1px 4px rgba(37,99,235,0.08)';\n                    }}\n                    onMouseDown={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'scale(0.93)';\n                      e.currentTarget.style.boxShadow = '0 1px 4px rgba(37,99,235,0.08)';\n                    }}\n                    onMouseUp={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.currentTarget.style.transform = 'scale(1.12)';\n                      e.currentTarget.style.boxShadow = '0 2px 8px rgba(37,99,235,0.16)';\n                    }}\n                    onClick={e => { e.stopPropagation(); setAddToSelectionId(p.id); }}\n                  />\n                  {!isClientMode && p.agent?.phone && (\n                    <Button\n                      shape=\"circle\"\n                      icon={<PhoneOutlined />}\n                      size=\"middle\"\n                      style={{\n                        background: '#f3f6fa',\n                        color: '#22c55e',\n                        border: '1.5px solid #bbf7d0',\n                        ...animatedBtnStyle,\n                      }}\n                      onMouseOver={(e: React.MouseEvent<HTMLButtonElement>) => {\n                        e.currentTarget.style.transform = 'scale(1.12)';\n                        e.currentTarget.style.boxShadow = '0 2px 8px rgba(37,99,235,0.16)';\n                      }}\n                      onMouseOut={(e: React.MouseEvent<HTMLButtonElement>) => {\n                        e.currentTarget.style.transform = 'none';\n                        e.currentTarget.style.boxShadow = '0 1px 4px rgba(37,99,235,0.08)';\n                      }}\n                      onMouseDown={(e: React.MouseEvent<HTMLButtonElement>) => {\n                        e.currentTarget.style.transform = 'scale(0.93)';\n                        e.currentTarget.style.boxShadow = '0 1px 4px rgba(37,99,235,0.08)';\n                      }}\n                      onMouseUp={(e: React.MouseEvent<HTMLButtonElement>) => {\n                        e.currentTarget.style.transform = 'scale(1.12)';\n                        e.currentTarget.style.boxShadow = '0 2px 8px rgba(37,99,235,0.16)';\n                      }}\n                      onClick={e => { e.stopPropagation(); setPhoneModal({ open: true, agent: p.agent }); }}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n        {/* Модалка добавить в подбор */}\n        <AddToSelectionModal open={!!addToSelectionId} propertyId={addToSelectionId || undefined} onClose={() => setAddToSelectionId(null)} />\n        {/* Модалка позвонить */}\n        {!isClientMode && (\n          <Modal open={phoneModal.open} onCancel={() => setPhoneModal({ open: false })} footer={null} title=\"Контакт агента\" destroyOnClose>\n            {phoneModal.agent && (\n              <Space direction=\"vertical\" size={8}>\n                <Avatar src={phoneModal.agent.photo} size={48} />\n                <Typography.Text strong>{phoneModal.agent.firstName} {phoneModal.agent.lastName}</Typography.Text>\n                <Typography.Text type=\"secondary\">{phoneModal.agent.phone}</Typography.Text>\n              </Space>\n            )}\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage; "],"names":["getAllProperties","async","params","URLSearchParams","filters","Object","entries","forEach","_ref","key","value","undefined","append","toString","response","api","get","Array","isArray","data","properties","getPropertyById","id","getPropertiesByAgent","agentId","getRecentProperties","updatePropertyStatus","status","token","patch","headers","Authorization","fetchSelections","err","createSelection","title","post","propertyIds","addPropertyToSelection","selectionId","propertyId","selection","includes","updated","put","removePropertyFromSelection","filter","deleteSelection","delete","getSelectionById","getClientLikes","getClientLink","clientToken","window","location","origin","downloadSelectionPdf","_link$parentNode","res","responseType","url","URL","createObjectURL","Blob","type","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","revokeObjectURL","getSelectionByClientToken","sendClientLike","liked","open","onClose","createOnly","selections","setSelections","useState","selectedId","setSelectedId","newTitle","setNewTitle","creating","setCreating","adding","setAdding","localStorage","getItem","useEffect","then","handleCreate","trim","newSel","prev","_message","success","_jsx","_Modal","onCancel","footer","destroyOnHidden","children","_jsxs","onClick","e","stopPropagation","style","marginBottom","fontWeight","_Select","width","placeholder","onChange","options","map","s","label","allowClear","_Input","target","marginRight","onPressEnter","_Button","disabled","loading","block","handleAdd","StandardMarkerWithPopup","lngLat","property","markerRef","useRef","marker","maplibregl","anchor","setLngLat","addTo","popup","offset","setHTML","photos","length","address","price","Number","toLocaleString","setPopup","current","remove","DEFAULT_CENTER","STORAGE_KEY","_ref2","onSelect","initialCenter","initialZoom","height","borderRadius","mapRef","freehandMode","onPolygonDraw","polygonCoords","mapContainer","internalMapRef","mapReady","setMapReady","initialCenterRef","initialZoomRef","drawing","setDrawing","drawPoints","setDrawPoints","polygonId","setPolygonId","showOverlay","setShowOverlay","usedDefault","saved","center","c","zoom","z","JSON","parse","fetch","r","json","lat","lon","setItem","stringify","container","pitch","bearing","on","getCenter","getZoom","lng","selected","find","p","flyTo","speed","isDrawing","points","polyId","onMouseDown","originalEvent","button","getCanvas","cursor","onMouseMove","push","onMouseUp","getSource","setData","geometry","coordinates","addSource","addLayer","source","paint","addPolygonToMap","off","geojson","getLayer","removeLayer","removeSource","outlineId","boxZoom","disable","dragPan","scrollZoom","keyboard","doubleClickZoom","touchZoomRotate","enable","ref","pointInPolygon","point","polygon","inside","i","j","xi","yi","xj","yj","propertyTypeOptions","statusOptions","materialOptions","sortOptions","DashboardPage","setProperties","selectedPropertyId","setSelectedPropertyId","setLoading","error","setError","isClientMode","useClientMode","setCenter","setZoom","mapboxRef","catch","finally","setFreehandMode","setPolygonCoords","showFilters","setShowFilters","setFilters","updateFilters","showAdvanced","setShowAdvanced","filteredProperties","tolerance","getToleranceByZoom","toleranceDeg","angle","Math","PI","dx","cos","dy","sin","testLng","testLat","navigate","useNavigate","addToSelectionId","setAddToSelectionId","phoneModal","setPhoneModal","animatedBtnStyle","transition","boxShadow","display","background","padding","margin","overflow","flex","minWidth","position","_Popover","content","maxWidth","prefix","SearchOutlined","color","search","border","gap","_InputNumber","HomeOutlined","min","minPrice","maxPrice","ExpandOutlined","minArea","maxArea","NumberOutlined","max","rooms","sort","icon","UpOutlined","DownOutlined","shape","v","ReloadOutlined","resetFilters","PictureOutlined","fontSize","setTimeout","danger","marginTop","flexWrap","alignItems","CalendarOutlined","minYear","maxYear","BuildOutlined","minFloor","maxFloor","ApartmentOutlined","minFloors","maxFloors","material","_Checkbox","checked","balcony","lift","parking","CarOutlined","furniture","tech","onlyWithPhoto","PictureIcon","isNew","isSecondary","trigger","onOpenChange","FilterOutlined","size","top","right","zIndex","Mapbox3DMap","coords","borderLeft","overflowY","flexShrink","letterSpacing","_p$legalCheck","_p$agent","_p$agent2","_p$agent3","_p$agent4","_p$agent4$agency","_p$agent5","for_sale","in_deal","reserved","sold","String","legalStatus","legalCheck","legalIcon","PropertySafetyOutlined","legalColor","legalText","SyncOutlined","spin","minHeight","justifyContent","src","alt","objectFit","flexDirection","_Tag","whiteSpace","textOverflow","agent","photo","_Avatar","firstName","lastName","agency","name","marginLeft","replace","InfoCircleOutlined","onMouseOver","currentTarget","transform","onMouseOut","PlusOutlined","phone","PhoneOutlined","AddToSelectionModal","destroyOnClose","_Space","direction","_Typography","Text","strong"],"sourceRoot":""}