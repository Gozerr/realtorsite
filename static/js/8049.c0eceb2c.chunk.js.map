{"version":3,"file":"static/js/8049.c0eceb2c.chunk.js","mappings":"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","sources":["components/AgencyTabs/AgencyAnalyticsTab.tsx","components/AgencyTabs/AgencyAgentsTab.tsx","components/AgencyTabs/AgencyManagersTab.tsx","components/AgencyTabs/AgencyPropertiesTab.tsx","components/AgencyTabs/AgencyClientsTab.tsx","components/AgencyTabs/AgencySettingsTab.tsx","services/joinRequest.service.ts","components/AgencyTabs/AgencyJoinRequestsTab.tsx","pages/AgencyDashboardPage.tsx","services/agency.service.ts","services/client.service.ts","components/ClientCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, Statistic, Tag, Table, Typography, Spin, message } from 'antd';\r\nimport { HomeOutlined, UserOutlined, StarOutlined } from '@ant-design/icons';\r\nimport { getMyAgencyAgents } from '../../services/agency.service';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst statusLabels: Record<string, string> = {\r\n  for_sale: 'На продаже',\r\n  in_deal: 'В сделке',\r\n  reserved: 'Зарезервировано',\r\n  sold: 'Продано',\r\n};\r\n\r\n// SVG Line Chart\r\nconst LineChart: React.FC<{ data: { month: string; value: number }[] }> = ({ data }) => {\r\n  if (!data.length) return <div style={{ color: '#aaa', textAlign: 'center' }}>Нет данных</div>;\r\n  const width = 420, height = 180, padding = 40;\r\n  const max = Math.max(...data.map(d => d.value), 1);\r\n  const points = data.map((d, i) => [\r\n    padding + (i * (width - 2 * padding)) / (data.length - 1),\r\n    height - padding - ((d.value / max) * (height - 2 * padding))\r\n  ]);\r\n  const path = points.map((p, i) => (i === 0 ? `M${p[0]},${p[1]}` : `L${p[0]},${p[1]}`)).join(' ');\r\n  return (\r\n    <svg width={width} height={height} style={{ width: '100%', maxWidth: 420 }}>\r\n      {/* Axes */}\r\n      <line x1={padding} y1={height - padding} x2={width - padding} y2={height - padding} stroke=\"#bbb\" />\r\n      <line x1={padding} y1={padding} x2={padding} y2={height - padding} stroke=\"#bbb\" />\r\n      {/* Path */}\r\n      <path d={path} fill=\"none\" stroke=\"#1890ff\" strokeWidth={2.5} />\r\n      {/* Points */}\r\n      {points.map(([x, y], i) => (\r\n        <circle key={i} cx={x} cy={y} r={4} fill=\"#1890ff\" stroke=\"#fff\" strokeWidth={1.5} />\r\n      ))}\r\n      {/* Labels */}\r\n      {data.map((d, i) => (\r\n        <text key={i} x={points[i][0]} y={height - padding + 18} textAnchor=\"middle\" fontSize={12} fill=\"#888\">{d.month}</text>\r\n      ))}\r\n      {/* Y axis labels */}\r\n      {[0, 0.5, 1].map((t, i) => (\r\n        <text key={i} x={padding - 8} y={height - padding - t * (height - 2 * padding) + 4} textAnchor=\"end\" fontSize={12} fill=\"#888\">{Math.round(max * t)}</text>\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\n// SVG Bar Chart\r\nconst BarChart: React.FC<{ data: { stage: string; value: number }[] }> = ({ data }) => {\r\n  if (!data.length) return <div style={{ color: '#aaa', textAlign: 'center' }}>Нет данных</div>;\r\n  const width = 420, height = 180, padding = 40;\r\n  const max = Math.max(...data.map(d => d.value), 1);\r\n  const barWidth = (width - 2 * padding) / data.length - 12;\r\n  return (\r\n    <svg width={width} height={height} style={{ width: '100%', maxWidth: 420 }}>\r\n      {/* Axes */}\r\n      <line x1={padding} y1={height - padding} x2={width - padding} y2={height - padding} stroke=\"#bbb\" />\r\n      <line x1={padding} y1={padding} x2={padding} y2={height - padding} stroke=\"#bbb\" />\r\n      {/* Bars */}\r\n      {data.map((d, i) => {\r\n        const x = padding + i * ((width - 2 * padding) / data.length) + 6;\r\n        const y = height - padding - (d.value / max) * (height - 2 * padding);\r\n        const h = (d.value / max) * (height - 2 * padding);\r\n        return (\r\n          <g key={i}>\r\n            <rect x={x} y={y} width={barWidth} height={h} fill=\"#52c41a\" rx={4} />\r\n            <text x={x + barWidth / 2} y={y - 6} textAnchor=\"middle\" fontSize={12} fill=\"#52c41a\">{d.value}</text>\r\n            <text x={x + barWidth / 2} y={height - padding + 18} textAnchor=\"middle\" fontSize={12} fill=\"#888\">{d.stage}</text>\r\n          </g>\r\n        );\r\n      })}\r\n      {/* Y axis labels */}\r\n      {[0, 0.5, 1].map((t, i) => (\r\n        <text key={i} x={padding - 8} y={height - padding - t * (height - 2 * padding) + 4} textAnchor=\"end\" fontSize={12} fill=\"#888\">{Math.round(max * t)}</text>\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst AgencyAnalyticsTab: React.FC<{ properties: any[]; clients: any[] }> = ({ properties, clients }) => {\r\n  const [agents, setAgents] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const [agentsData] = await Promise.all([\r\n          getMyAgencyAgents(),\r\n        ]);\r\n        setAgents(agentsData);\r\n      } catch {\r\n        message.error('Не удалось загрузить агентов');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, []);\r\n\r\n  // Карточки\r\n  const total = properties.length;\r\n  const forSale = properties.filter(p => p.status === 'for_sale').length;\r\n  const sold = properties.filter(p => p.status === 'sold').length;\r\n  const exclusive = properties.filter(p => p.isExclusive).length;\r\n  const agentCount = agents.length;\r\n  const clientCount = clients.length;\r\n\r\n  // Динамика по месяцам\r\n  const monthly = properties.reduce((acc: Record<string, number>, p) => {\r\n    const d = new Date(p.createdAt);\r\n    const key = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;\r\n    acc[key] = (acc[key] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const lineData = Object.entries(monthly).map(([month, value]) => ({ month, value }));\r\n  lineData.sort((a, b) => a.month.localeCompare(b.month));\r\n\r\n  // Воронка по статусам\r\n  const funnelData = Object.entries(\r\n    properties.reduce((acc: Record<string, number>, p) => {\r\n      acc[p.status] = (acc[p.status] || 0) + 1;\r\n      return acc;\r\n    }, {})\r\n  ).map(([status, value]) => ({ stage: statusLabels[status] || status, value }));\r\n\r\n  // Топ-5 агентов по количеству объектов\r\n  const agentStats = agents.map(agent => ({\r\n    ...agent,\r\n    propertyCount: properties.filter(p => p.agent && p.agent.id === agent.id).length,\r\n  }));\r\n  agentStats.sort((a, b) => b.propertyCount - a.propertyCount);\r\n  const topAgents = agentStats.slice(0, 5);\r\n\r\n  const agentColumns = [\r\n    { title: 'Агент', dataIndex: 'fullName', key: 'fullName', render: (_: any, r: any) => `${r.lastName || ''} ${r.firstName || ''}` },\r\n    { title: 'Email', dataIndex: 'email', key: 'email' },\r\n    { title: 'Объектов', dataIndex: 'propertyCount', key: 'propertyCount', render: (v: number) => <Tag color=\"blue\">{v}</Tag> },\r\n  ];\r\n\r\n  if (loading) return <Spin />;\r\n\r\n  return (\r\n    <div>\r\n      <Title level={4}>Аналитика агентства</Title>\r\n      <Row gutter={[16, 16]}>\r\n        <Col span={4}><Card><Statistic title=\"Всего объектов\" value={total} prefix={<HomeOutlined />} /></Card></Col>\r\n        <Col span={4}><Card><Statistic title=\"На продаже\" value={forSale} /></Card></Col>\r\n        <Col span={4}><Card><Statistic title=\"Продано\" value={sold} /></Card></Col>\r\n        <Col span={4}><Card><Statistic title=\"Эксклюзивы\" value={exclusive} prefix={<StarOutlined />} /></Card></Col>\r\n        <Col span={4}><Card><Statistic title=\"Клиенты\" value={clientCount} prefix={<UserOutlined />} /></Card></Col>\r\n        <Col span={4}><Card><Statistic title=\"Агенты\" value={agentCount} prefix={<UserOutlined />} /></Card></Col>\r\n      </Row>\r\n      <Row gutter={16} style={{ marginTop: 32 }}>\r\n        <Col span={12}>\r\n          <Card title=\"Динамика добавления объектов (по месяцам)\">\r\n            <LineChart data={lineData} />\r\n          </Card>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Card title=\"Воронка продаж (по статусам)\">\r\n            <BarChart data={funnelData} />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: 32 }}>\r\n        <Col span={24}>\r\n          <Card title=\"Топ-5 агентов по количеству объектов\">\r\n            <Table\r\n              rowKey=\"id\"\r\n              columns={agentColumns}\r\n              dataSource={topAgents}\r\n              pagination={false}\r\n              size=\"small\"\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyAnalyticsTab; ","import React, { useEffect, useState } from 'react';\r\nimport { getMyAgencyAgents, fireAgent, restoreAgent } from '../../services/agency.service';\r\nimport { getPropertiesByAgent } from '../../services/property.service';\r\nimport { getClientsByAgent } from '../../services/client.service';\r\nimport { Card, Row, Col, Typography, Spin, Empty, Tag, Button, Modal, message } from 'antd';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport PropertyCard from '../PropertyCard';\r\nimport ClientCard from '../ClientCard';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst avatarStyle: React.CSSProperties = {\r\n  width: 72,\r\n  height: 72,\r\n  borderRadius: 12,\r\n  objectFit: 'cover',\r\n  background: '#f0f0f0',\r\n  fontSize: 28,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst cardStyle: React.CSSProperties = {\r\n  padding: 6,\r\n  borderRadius: 10,\r\n  boxShadow: '0 1px 4px rgba(0,0,0,0.04)',\r\n  marginBottom: 0,\r\n  maxWidth: 320,\r\n  minWidth: 0,\r\n  width: '100%',\r\n};\r\n\r\nconst metaStyle: React.CSSProperties = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: 8,\r\n};\r\n\r\nconst AgencyAgentsTab: React.FC<{ agency: any }> = () => {\r\n  const { user } = useAuth();\r\n  const [agents, setAgents] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [modal, setModal] = useState<{ visible: boolean; agent: any | null }>({ visible: false, agent: null });\r\n  const [reason, setReason] = useState('');\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [detailsModal, setDetailsModal] = useState<{ visible: boolean; agent: any | null }>({ visible: false, agent: null });\r\n  const [agentProperties, setAgentProperties] = useState<any[]>([]);\r\n  const [agentClients, setAgentClients] = useState<any[]>([]);\r\n  const [detailsLoading, setDetailsLoading] = useState(false);\r\n\r\n  const loadAgents = () => {\r\n    setLoading(true);\r\n    getMyAgencyAgents()\r\n      .then(setAgents)\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => { loadAgents(); }, []);\r\n\r\n  const handleFire = async () => {\r\n    if (!modal.agent) return;\r\n    setActionLoading(true);\r\n    try {\r\n      await fireAgent(modal.agent.id, reason);\r\n      message.success('Сотрудник уволен');\r\n      setModal({ visible: false, agent: null });\r\n      setReason('');\r\n      loadAgents();\r\n    } catch {\r\n      message.error('Ошибка при увольнении');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRestore = async (agent: any) => {\r\n    setActionLoading(true);\r\n    try {\r\n      await restoreAgent(agent.id);\r\n      message.success('Сотрудник восстановлен');\r\n      loadAgents();\r\n    } catch {\r\n      message.error('Ошибка при восстановлении');\r\n    } finally {\r\n      setActionLoading(false);\r\n    }\r\n  };\r\n\r\n  const openAgentDetails = async (agent: any) => {\r\n    setDetailsModal({ visible: true, agent });\r\n    setDetailsLoading(true);\r\n    try {\r\n      const [properties, clients] = await Promise.all([\r\n        getPropertiesByAgent(agent.id),\r\n        getClientsByAgent(agent.id),\r\n      ]);\r\n      setAgentProperties(properties);\r\n      setAgentClients(clients);\r\n    } catch {\r\n      setAgentProperties([]);\r\n      setAgentClients([]);\r\n    } finally {\r\n      setDetailsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title level={4}>Агенты агентства</Title>\r\n      {loading ? <Spin /> : (\r\n        <Row gutter={[8, 8]}>\r\n          {agents.length > 0 ? agents.map(agent => (\r\n            <Col xs={24} sm={12} md={8} key={agent.id}>\r\n              <Card\r\n                style={cardStyle}\r\n                actions={[\r\n                  user?.role === 'director' && agent.status !== 'fired' && agent.id !== user.id && (\r\n                    <Button danger size=\"small\" style={{ padding: '0 8px', fontSize: 12, height: 24 }} onClick={() => setModal({ visible: true, agent })}>Уволить</Button>\r\n                  ),\r\n                  user?.role === 'director' && agent.status === 'fired' && (\r\n                    <Button size=\"small\" style={{ padding: '0 8px', fontSize: 12, height: 24 }} onClick={() => handleRestore(agent)}>Восстановить</Button>\r\n                  )\r\n                ].filter(Boolean)}\r\n                bodyStyle={{ padding: 6 }}\r\n                hoverable\r\n                onClick={() => openAgentDetails(agent)}\r\n              >\r\n                <div style={metaStyle}>\r\n                  <img\r\n                    src={agent.photo || undefined}\r\n                    alt={agent.firstName || '?'}\r\n                    style={avatarStyle}\r\n                    onError={e => (e.currentTarget.src = '')}\r\n                  />\r\n                  <div style={{ flex: 1 }}>\r\n                    <div style={{ fontWeight: 600, fontSize: 15, lineHeight: 1.2 }}>{agent.lastName} {agent.firstName}</div>\r\n                    <div style={{ fontSize: 12, color: '#555', margin: '2px 0' }}>{agent.email}</div>\r\n                    {agent.phone && <div style={{ fontSize: 12, color: '#888', margin: '2px 0' }}>{agent.phone}</div>}\r\n                    <Tag color={agent.status === 'active' ? 'green' : agent.status === 'fired' ? 'red' : 'orange'} style={{ fontSize: 11, height: 20, lineHeight: '18px', padding: '0 8px' }}>{agent.status === 'fired' ? 'Уволен' : agent.status}</Tag>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          )) : (\r\n            <Col span={24}><Empty description=\"Агенты не найдены.\" /></Col>\r\n          )}\r\n        </Row>\r\n      )}\r\n      <Modal\r\n        open={modal.visible}\r\n        title={`Уволить сотрудника: ${modal.agent?.lastName || ''} ${modal.agent?.firstName || ''}`}\r\n        onCancel={() => { setModal({ visible: false, agent: null }); setReason(''); }}\r\n        onOk={handleFire}\r\n        confirmLoading={actionLoading}\r\n        okText=\"Уволить\"\r\n        okButtonProps={{ danger: true }}\r\n      >\r\n        <p>Вы уверены, что хотите уволить этого сотрудника? Это действие можно отменить.</p>\r\n        <input\r\n          style={{ width: '100%', marginTop: 8 }}\r\n          placeholder=\"Причина увольнения (необязательно)\"\r\n          value={reason}\r\n          onChange={e => setReason(e.target.value)}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        open={detailsModal.visible}\r\n        title={detailsModal.agent ? `Информация об агенте: ${detailsModal.agent.lastName} ${detailsModal.agent.firstName}` : ''}\r\n        onCancel={() => { setDetailsModal({ visible: false, agent: null }); setAgentProperties([]); setAgentClients([]); }}\r\n        footer={null}\r\n        width={700}\r\n      >\r\n        {detailsLoading ? <Spin /> : detailsModal.agent && (\r\n          <div>\r\n            <div style={{ display: 'flex', gap: 24, alignItems: 'center', marginBottom: 16 }}>\r\n              <img src={detailsModal.agent.photo || undefined} alt={detailsModal.agent.firstName || '?'} style={{ width: 90, height: 90, borderRadius: 16, objectFit: 'cover', background: '#f0f0f0' }} />\r\n              <div>\r\n                <div style={{ fontWeight: 600, fontSize: 18 }}>{detailsModal.agent.lastName} {detailsModal.agent.firstName}</div>\r\n                <div style={{ fontSize: 14, color: '#555' }}>{detailsModal.agent.email}</div>\r\n                {detailsModal.agent.phone && <div style={{ fontSize: 14, color: '#888' }}>{detailsModal.agent.phone}</div>}\r\n                <Tag color={detailsModal.agent.status === 'active' ? 'green' : detailsModal.agent.status === 'fired' ? 'red' : 'orange'} style={{ fontSize: 12, height: 22, lineHeight: '20px', padding: '0 10px', marginTop: 4 }}>{detailsModal.agent.status === 'fired' ? 'Уволен' : detailsModal.agent.status}</Tag>\r\n              </div>\r\n            </div>\r\n            <div style={{ marginBottom: 16 }}>\r\n              <Title level={5} style={{ marginBottom: 8 }}>Объекты агента</Title>\r\n              {agentProperties.length === 0 ? <Text type=\"secondary\">Нет объектов</Text> : (\r\n                <Row gutter={[8, 8]}>\r\n                  {agentProperties.map((property: any) => (\r\n                    <Col xs={24} sm={12} key={property.id}>\r\n                      <PropertyCard property={property} mode=\"compact\" />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <Title level={5} style={{ marginBottom: 8 }}>Клиенты агента</Title>\r\n              {agentClients.length === 0 ? <Text type=\"secondary\">Нет клиентов</Text> : (\r\n                <Row gutter={[8, 8]}>\r\n                  {agentClients.map((client: any) => (\r\n                    <Col xs={24} sm={12} key={client.id}>\r\n                      <ClientCard client={client} />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyAgentsTab; ","import React, { useEffect, useState } from 'react';\r\nimport { getMyAgencyManagers } from '../../services/agency.service';\r\nimport { Card, Row, Col, Avatar, Typography, Spin, Empty, Tag } from 'antd';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst AgencyManagersTab: React.FC<{ agency: any }> = () => {\r\n  const [managers, setManagers] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getMyAgencyManagers()\r\n      .then(setManagers)\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Title level={4}>Руководители агентства</Title>\r\n      {loading ? <Spin /> : (\r\n        <Row gutter={[16, 16]}>\r\n          {managers.length > 0 ? managers.map(manager => (\r\n            <Col xs={24} sm={12} md={8} key={manager.id}>\r\n              <Card>\r\n                <Card.Meta\r\n                  avatar={<Avatar src={manager.photo} size={48}>{manager.firstName?.[0]}</Avatar>}\r\n                  title={`${manager.lastName} ${manager.firstName}`}\r\n                  description={<>\r\n                    <Text>{manager.email}</Text><br/>\r\n                    <Text type=\"secondary\">{manager.phone}</Text><br/>\r\n                    <Tag color={manager.status === 'active' ? 'green' : 'orange'}>{manager.status}</Tag>\r\n                  </>}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          )) : (\r\n            <Col span={24}><Empty description=\"Руководители не найдены.\" /></Col>\r\n          )}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyManagersTab; ","import React, { useEffect, useState } from 'react';\r\nimport { Table, Tag, Spin, Image, Typography, message } from 'antd';\r\nimport { getMyAgencyProperties } from '../../services/agency.service';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst AgencyPropertiesTab: React.FC<{ agency?: any }> = () => {\r\n  const [properties, setProperties] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loadProperties = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getMyAgencyProperties();\r\n      setProperties(data);\r\n    } catch {\r\n      message.error('Не удалось загрузить объекты агентства');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { loadProperties(); }, []);\r\n\r\n  const columns = [\r\n    { title: 'ID', dataIndex: 'id', key: 'id', width: 60 },\r\n    { title: 'Название', dataIndex: 'title', key: 'title' },\r\n    { title: 'Адрес', dataIndex: 'address', key: 'address' },\r\n    { title: 'Цена', dataIndex: 'price', key: 'price', render: (p: number) => p ? p.toLocaleString() + ' ₽' : '-' },\r\n    { title: 'Статус', dataIndex: 'status', key: 'status', render: (s: string) => <Tag color={s === 'for_sale' ? 'green' : s === 'sold' ? 'red' : 'orange'}>{s}</Tag> },\r\n    { title: 'Агент', dataIndex: ['agent', 'firstName'], key: 'agent', render: (_: any, r: any) => r.agent ? `${r.agent.lastName || ''} ${r.agent.firstName || ''}` : '-' },\r\n    { title: 'Фото', dataIndex: 'photos', key: 'photos', render: (photos: string[]) => photos && photos.length > 0 ? <Image src={photos[0]} width={60} /> : <span style={{ color: '#aaa' }}>Нет</span> },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Title level={4}>Объекты агентства</Title>\r\n      {loading ? <Spin /> : (\r\n        <Table rowKey=\"id\" columns={columns} dataSource={properties} pagination={{ pageSize: 10 }} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyPropertiesTab; ","import React, { useEffect, useState } from 'react';\r\nimport { getAgencyClients } from '../../services/client.service';\r\nimport { Client } from '../../types';\r\nimport { Row, Col, Card, Spin, Empty, Typography } from 'antd';\r\nimport ClientCard from '../ClientCard';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst AgencyClientsTab: React.FC<{ agency: any }> = () => {\r\n  const [clients, setClients] = useState<Client[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getAgencyClients()\r\n      .then(setClients)\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Title level={4}>Клиенты агентства</Title>\r\n      {loading ? <Spin /> : (\r\n        <Row gutter={[16, 16]}>\r\n          {clients.length > 0 ? clients.map(client => (\r\n            <Col xs={24} sm={12} md={8} key={client.id}>\r\n              <ClientCard client={client} />\r\n            </Col>\r\n          )) : (\r\n            <Col span={24}><Empty description=\"Клиенты не найдены.\" /></Col>\r\n          )}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyClientsTab; ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Card, Typography, Tag, Upload, Button, message, Spin, List, Image, Form, Input } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { getMyAgency, uploadAgencyLogo, uploadAgencyDocuments } from '../../services/agency.service';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst AgencySettingsTab: React.FC<{ agency?: any }> = () => {\r\n  const { user } = useAuth();\r\n  const [agency, setAgency] = useState<any>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [logoLoading, setLogoLoading] = useState(false);\r\n  const [docsLoading, setDocsLoading] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const [form] = Form.useForm();\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const loadAgency = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getMyAgency(user);\r\n      setAgency(data);\r\n    } catch {\r\n      message.error('Не удалось загрузить агентство');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { loadAgency(); /* eslint-disable-next-line */ }, []);\r\n\r\n  const handleLogoChange = async (info: any) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLogoLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success('Логотип успешно загружен');\r\n      loadAgency();\r\n      setLogoLoading(false);\r\n    } else if (info.file.status === 'error') {\r\n      message.error('Ошибка при загрузке логотипа');\r\n      setLogoLoading(false);\r\n    }\r\n  };\r\n\r\n  const customLogoRequest = async ({ file, onSuccess, onError }: any) => {\r\n    const formData = new FormData();\r\n    formData.append('logo', file);\r\n    try {\r\n      await uploadAgencyLogo(formData);\r\n      onSuccess('ok');\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  };\r\n\r\n  const handleDocsChange = async (info: any) => {\r\n    if (info.file.status === 'uploading') {\r\n      setDocsLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success('Документы успешно загружены');\r\n      loadAgency();\r\n      setDocsLoading(false);\r\n    } else if (info.file.status === 'error') {\r\n      message.error('Ошибка при загрузке документов');\r\n      setDocsLoading(false);\r\n    }\r\n  };\r\n\r\n  const customDocsRequest = async ({ file, onSuccess, onError }: any) => {\r\n    const formData = new FormData();\r\n    formData.append('documents', file);\r\n    try {\r\n      await uploadAgencyDocuments(formData);\r\n      onSuccess('ok');\r\n    } catch (e) {\r\n      onError(e);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditing(true);\r\n    form.setFieldsValue({\r\n      name: agency.name,\r\n      address: agency.address,\r\n      phone: agency.phone,\r\n      email: agency.email,\r\n      description: agency.description,\r\n      website: agency.website,\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      await fetch('/api/agencies/my-agency', {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(values),\r\n        credentials: 'include',\r\n      });\r\n      message.success('Информация об агентстве обновлена');\r\n      setEditing(false);\r\n      loadAgency();\r\n    } catch (e) {\r\n      message.error('Ошибка при обновлении информации');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n    form.setFieldsValue({\r\n      name: agency.name,\r\n      address: agency.address,\r\n      phone: agency.phone,\r\n      email: agency.email,\r\n      description: agency.description,\r\n      website: agency.website,\r\n    });\r\n  };\r\n\r\n  if (loading) return <Spin />;\r\n  if (!agency) return <div>Агентство не найдено</div>;\r\n\r\n  return (\r\n    <Card style={{ maxWidth: 600 }}>\r\n      <Title level={4}>Настройки агентства</Title>\r\n      {editing ? (\r\n        <Form form={form} layout=\"vertical\">\r\n          <Form.Item label=\"Название\" name=\"name\" rules={[{ required: true, message: 'Введите название агентства' }]}> <Input /> </Form.Item>\r\n          <Form.Item label=\"Адрес\" name=\"address\"> <Input /> </Form.Item>\r\n          <Form.Item label=\"Телефон\" name=\"phone\"> <Input /> </Form.Item>\r\n          <Form.Item label=\"Email\" name=\"email\"> <Input /> </Form.Item>\r\n          <Form.Item label=\"Описание\" name=\"description\"> <Input.TextArea rows={3} /> </Form.Item>\r\n          <Form.Item label=\"Сайт\" name=\"website\"> <Input /> </Form.Item>\r\n          <div style={{ display: 'flex', gap: 8 }}>\r\n            <Button type=\"primary\" onClick={handleSave}>Сохранить</Button>\r\n            <Button onClick={handleCancel}>Отмена</Button>\r\n          </div>\r\n        </Form>\r\n      ) : (\r\n        <>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Text strong>Название:</Text> {agency.name}\r\n            {user?.role === 'director' && (\r\n              <Button type=\"link\" size=\"small\" onClick={handleEdit} style={{ marginLeft: 8 }}>Редактировать</Button>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Text strong>Статус:</Text> {agency.verified ? <Tag color=\"green\">Верифицировано</Tag> : <Tag color=\"orange\">Не верифицировано</Tag>}\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Text strong>Логотип:</Text><br />\r\n            {agency.logo ? <Image src={agency.logo} width={120} alt=\"Логотип\" /> : <Text type=\"secondary\">Нет логотипа</Text>}\r\n            {user?.role === 'director' && (\r\n              <Upload\r\n                name=\"logo\"\r\n                showUploadList={false}\r\n                customRequest={customLogoRequest}\r\n                onChange={handleLogoChange}\r\n                accept=\"image/*\"\r\n                disabled={logoLoading}\r\n              >\r\n                <Button icon={<UploadOutlined />} loading={logoLoading} style={{ marginTop: 8 }}>Загрузить логотип</Button>\r\n              </Upload>\r\n            )}\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <Text strong>Документы:</Text>\r\n            {agency.documents && agency.documents.length > 0 ? (\r\n              <List\r\n                size=\"small\"\r\n                dataSource={agency.documents}\r\n                renderItem={doc => {\r\n                  const docStr = String(doc);\r\n                  return (\r\n                    <List.Item>\r\n                      <a href={docStr} target=\"_blank\" rel=\"noopener noreferrer\">{docStr.split('/').pop()}</a>\r\n                    </List.Item>\r\n                  );\r\n                }}\r\n              />\r\n            ) : <Text type=\"secondary\">Нет документов</Text>}\r\n            {user?.role === 'director' && (\r\n              <Upload\r\n                name=\"documents\"\r\n                showUploadList={false}\r\n                customRequest={customDocsRequest}\r\n                onChange={handleDocsChange}\r\n                accept=\".pdf,image/*\"\r\n                disabled={docsLoading}\r\n              >\r\n                <Button icon={<UploadOutlined />} loading={docsLoading} style={{ marginTop: 8 }}>Загрузить документ</Button>\r\n              </Upload>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AgencySettingsTab; ","import api from './api';\r\n\r\nexport const getJoinRequests = async () => {\r\n  const response = await api.get('/api/agency-join-requests/my-agency/join-requests');\r\n  return response.data;\r\n};\r\n\r\nexport const approveJoinRequest = async (id: number) => {\r\n  await api.patch(`/api/agency-join-requests/join-request/${id}/approve`);\r\n};\r\n\r\nexport const rejectJoinRequest = async (id: number) => {\r\n  await api.patch(`/api/agency-join-requests/join-request/${id}/reject`);\r\n}; ","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Tag, Spin, message, Typography } from 'antd';\r\nimport { getJoinRequests, approveJoinRequest, rejectJoinRequest } from '../../services/joinRequest.service';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst AgencyJoinRequestsTab: React.FC<{ agency: any }> = () => {\r\n  const { user } = useAuth();\r\n  const [requests, setRequests] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionLoading, setActionLoading] = useState<number | null>(null);\r\n\r\n  const loadRequests = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await getJoinRequests();\r\n      setRequests(data);\r\n    } catch (e) {\r\n      message.error('Не удалось загрузить заявки');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => { loadRequests(); }, []);\r\n\r\n  const handleApprove = async (id: number) => {\r\n    setActionLoading(id);\r\n    try {\r\n      await approveJoinRequest(id);\r\n      message.success('Заявка одобрена');\r\n      loadRequests();\r\n    } catch {\r\n      message.error('Ошибка при одобрении');\r\n    } finally {\r\n      setActionLoading(null);\r\n    }\r\n  };\r\n\r\n  const handleReject = async (id: number) => {\r\n    setActionLoading(id);\r\n    try {\r\n      await rejectJoinRequest(id);\r\n      message.success('Заявка отклонена');\r\n      loadRequests();\r\n    } catch {\r\n      message.error('Ошибка при отклонении');\r\n    } finally {\r\n      setActionLoading(null);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'Имя', dataIndex: ['user', 'firstName'], key: 'firstName', render: (_: any, r: any) => `${r.user?.lastName || ''} ${r.user?.firstName || ''}` },\r\n    { title: 'Email', dataIndex: ['user', 'email'], key: 'email' },\r\n    { title: 'Роль', dataIndex: 'role', key: 'role', render: (role: string) => <Tag>{role}</Tag> },\r\n    { title: 'Дата', dataIndex: 'createdAt', key: 'createdAt', render: (d: string) => new Date(d).toLocaleString() },\r\n    { title: 'Статус', dataIndex: 'status', key: 'status', render: (s: string) => <Tag color={s === 'pending' ? 'orange' : s === 'approved' ? 'green' : 'red'}>{s}</Tag> },\r\n    {\r\n      title: 'Действия',\r\n      key: 'actions',\r\n      render: (_: any, r: any) => r.status === 'pending' && (\r\n        <span>\r\n          <Button size=\"small\" type=\"primary\" loading={actionLoading === r.id} onClick={() => handleApprove(r.id)} style={{ marginRight: 8 }}>Одобрить</Button>\r\n          <Button size=\"small\" danger loading={actionLoading === r.id} onClick={() => handleReject(r.id)}>Отклонить</Button>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const filteredRequests = user ? requests.filter(r => r.user?.id !== user.id) : requests;\r\n\r\n  return (\r\n    <div>\r\n      <Title level={4}>Заявки на вступление</Title>\r\n      {loading ? <Spin /> : (\r\n        <Table rowKey=\"id\" columns={columns} dataSource={filteredRequests} pagination={false} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyJoinRequestsTab; ","import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { Typography, Tabs, Card, Row, Col, Statistic, Button, Divider } from 'antd';\r\nimport { TeamOutlined, UserOutlined, HomeOutlined, BellOutlined, CalendarOutlined, SettingOutlined, ApiOutlined, BookOutlined } from '@ant-design/icons';\r\nimport { getAllProperties } from '../services/property.service';\r\nimport { getClients } from '../services/client.service';\r\nimport { getMyAgency } from '../services/agency.service';\r\nimport { Property, Client } from '../types';\r\nimport AgencyAnalyticsTab from '../components/AgencyTabs/AgencyAnalyticsTab';\r\nimport AgencyAgentsTab from '../components/AgencyTabs/AgencyAgentsTab';\r\nimport AgencyManagersTab from '../components/AgencyTabs/AgencyManagersTab';\r\nimport AgencyPropertiesTab from '../components/AgencyTabs/AgencyPropertiesTab';\r\nimport AgencyClientsTab from '../components/AgencyTabs/AgencyClientsTab';\r\nimport AgencySettingsTab from '../components/AgencyTabs/AgencySettingsTab';\r\nimport AgencyJoinRequestsTab from '../components/AgencyTabs/AgencyJoinRequestsTab';\r\n// Импортировать остальные сервисы по мере необходимости\r\n\r\nconst { Title } = Typography;\r\n\r\nconst AgencyDashboardPage = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const [properties, setProperties] = useState<Property[]>([]);\r\n  const [clients, setClients] = useState<Client[]>([]);\r\n  const [agency, setAgency] = useState<any | null>(null);\r\n  const [loadingAgency, setLoadingAgency] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(() => localStorage.getItem('agencyDashboardTab') || 'analytics');\r\n  // TODO: добавить состояния для агентов, руководителей, уведомлений, календаря, обучения, интеграций\r\n\r\n  useEffect(() => {\r\n    // Загрузка объектов агентства\r\n    getAllProperties().then(setProperties);\r\n    // Загрузка клиентов агентства\r\n    if (authContext?.token) {\r\n      getClients().then(setClients);\r\n    }\r\n    // Загрузка агентства\r\n    setLoadingAgency(true);\r\n    if (authContext?.user?.role === 'support' || !authContext?.user?.agencyId) {\r\n      setAgency(null);\r\n      setLoadingAgency(false);\r\n    } else {\r\n      getMyAgency(authContext?.user)\r\n        .then(setAgency)\r\n        .catch(() => setAgency(null))\r\n        .finally(() => setLoadingAgency(false));\r\n    }\r\n    // TODO: загрузить агентов, руководителей, уведомления, календарь, обучение, интеграции\r\n  }, [authContext?.token, authContext?.user]);\r\n\r\n  return (\r\n    <div style={{ padding: 24 }}>\r\n      <Title level={2}>Моё агентство</Title>\r\n      {loadingAgency ? (\r\n        <div style={{ margin: '32px 0' }}>Загрузка агентства...</div>\r\n      ) : agency ? (\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 24,\r\n          marginBottom: 32,\r\n          background: '#f6faff',\r\n          borderRadius: 16,\r\n          padding: '24px 32px',\r\n          boxShadow: '0 2px 8px rgba(40,60,90,0.06)',\r\n        }}>\r\n          {agency.logo && (\r\n            <img\r\n              src={agency.logo}\r\n              alt=\"Логотип агентства\"\r\n              style={{ width: 72, height: 72, objectFit: 'cover', borderRadius: 12, background: '#fff', border: '1px solid #e6eaf1' }}\r\n            />\r\n          )}\r\n          <div style={{ flex: 1 }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n              <span style={{ fontSize: 28, fontWeight: 700, color: '#1e3a5f' }}>{agency.name}</span>\r\n              <span style={{ background: '#52c41a', color: '#fff', borderRadius: 8, padding: '2px 12px', fontSize: 14, fontWeight: 600, marginLeft: 8 }}>Ваше агентство</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div style={{ margin: '32px 0', color: '#ff4d4f' }}>Агентство не найдено или не привязано к вашему профилю.</div>\r\n      )}\r\n      <Tabs\r\n        activeKey={activeTab}\r\n        onChange={key => {\r\n          setActiveTab(key);\r\n          localStorage.setItem('agencyDashboardTab', key);\r\n        }}\r\n      >\r\n        <Tabs.TabPane tab={<><TeamOutlined /> Аналитика</>} key=\"analytics\">\r\n          <AgencyAnalyticsTab properties={properties} clients={clients} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab={<><TeamOutlined /> Агенты</>} key=\"agents\">\r\n          <AgencyAgentsTab agency={agency} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab={<><UserOutlined /> Руководители</>} key=\"managers\">\r\n          <AgencyManagersTab agency={agency} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab={<><HomeOutlined /> Объекты</>} key=\"properties\">\r\n          <AgencyPropertiesTab agency={agency} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab={<><UserOutlined /> Клиенты</>} key=\"clients\">\r\n          <AgencyClientsTab agency={agency} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab={<><TeamOutlined /> Заявки на вступление</>} key=\"join-requests\">\r\n          <AgencyJoinRequestsTab agency={agency} />\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab={<><SettingOutlined /> Настройки</>} key=\"settings\">\r\n          <AgencySettingsTab agency={agency} />\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgencyDashboardPage; ","import api from './api';\r\n\r\nexport interface Agency {\r\n  id: number;\r\n  name: string;\r\n  verified: boolean;\r\n  documents?: string[];\r\n}\r\n\r\nexport const getMyAgency = async (user?: any): Promise<Agency | null> => {\r\n  if (user && (user.role === 'support' || !user.agencyId)) {\r\n    return null;\r\n  }\r\n  const response = await api.get('/api/agencies/my-agency');\r\n  return response.data;\r\n};\r\n\r\nexport const uploadAgencyDocuments = async (formData: FormData): Promise<any> => {\r\n  const response = await api.post('/api/agencies/upload-documents', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const searchAgencies = async (query: string): Promise<Agency[]> => {\r\n  const response = await api.get(`/api/agencies?search=${encodeURIComponent(query)}`);\r\n  return response.data;\r\n};\r\n\r\nexport const uploadAgencyLogo = async (formData: FormData): Promise<any> => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch('/api/agencies/upload-logo', {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Ошибка при загрузке логотипа');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getMyAgencyAgents = async (): Promise<any[]> => {\r\n  const response = await api.get('/api/agencies/my-agency/agents');\r\n  return response.data;\r\n};\r\n\r\nexport const getMyAgencyManagers = async (): Promise<any[]> => {\r\n  const response = await api.get('/api/agencies/my-agency/managers');\r\n  return response.data;\r\n};\r\n\r\nexport const getMyAgencyProperties = async (): Promise<any[]> => {\r\n  const response = await api.get('/api/properties/agency');\r\n  return response.data;\r\n};\r\n\r\nexport const fireAgent = async (id: number, reason?: string): Promise<any> => {\r\n  const response = await api.patch(`/api/users/${id}/fire`, { reason });\r\n  return response.data;\r\n};\r\n\r\nexport const restoreAgent = async (id: number): Promise<any> => {\r\n  const response = await api.patch(`/api/users/${id}/restore`);\r\n  return response.data;\r\n}; ","import api from './api';\r\nimport { Client, PaginatedResponse, FilterOptions } from '../types';\r\n\r\nexport const getClients = async (filters?: FilterOptions): Promise<Client[]> => {\r\n  const params = new URLSearchParams();\r\n  if (filters) {\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        params.append(key, value.toString());\r\n      }\r\n    });\r\n  }\r\n  \r\n  const response = await api.get(`/api/clients?${params.toString()}`);\r\n  // Унифицируем: если data - массив, возвращаем его, если объект с .clients - возвращаем его\r\n  if (Array.isArray(response.data)) return response.data;\r\n  if (response.data && Array.isArray(response.data.clients)) return response.data.clients;\r\n  return [];\r\n};\r\n\r\nexport const getClientById = async (id: number): Promise<Client> => {\r\n  const response = await api.get(`/api/clients/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createClient = async (clientData: Partial<Client>): Promise<Client> => {\r\n  const response = await api.post('/api/clients', clientData);\r\n  return response.data;\r\n};\r\n\r\nexport const updateClient = async (id: number, clientData: Partial<Client>): Promise<Client> => {\r\n  const response = await api.patch(`/api/clients/${id}`, clientData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteClient = async (id: number): Promise<void> => {\r\n  await api.delete(`/api/clients/${id}`);\r\n};\r\n\r\nexport const getMyClients = async (): Promise<Client[]> => {\r\n  const response = await api.get('/api/clients/my');\r\n  return response.data;\r\n};\r\n\r\nexport const getClientsByAgent = async (agentId: number): Promise<Client[]> => {\r\n  return getClients({ agentId });\r\n};\r\n\r\nexport const updateClientStatus = async (id: number, status: string): Promise<Client> => {\r\n  const response = await api.patch(`/api/clients/${id}/status`, { status });\r\n  return response.data;\r\n};\r\n\r\nexport const getClientStats = async (): Promise<any> => {\r\n  const response = await api.get('/api/clients/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const searchClients = async (query: string): Promise<Client[]> => {\r\n  const response = await api.get(`/api/clients/search?q=${encodeURIComponent(query)}`);\r\n  return response.data;\r\n};\r\n\r\nexport const exportClients = async (filters?: FilterOptions): Promise<Blob> => {\r\n  const params = new URLSearchParams();\r\n  if (filters) {\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        params.append(key, value.toString());\r\n      }\r\n    });\r\n  }\r\n  \r\n  const response = await api.get(`/api/clients/export?${params.toString()}`, {\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\nexport const importClients = async (file: File): Promise<any> => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  \r\n  const response = await api.post('/api/clients/import', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  \r\n  return response.data;\r\n}; \r\n\r\nexport const getAgencyClients = async (): Promise<Client[]> => {\r\n  const response = await api.get('/api/clients/agency');\r\n  return response.data;\r\n}; ","import React from 'react';\r\nimport { Card, Avatar, Typography, Space, Dropdown, Menu, Tag } from 'antd';\r\nimport { UserOutlined, EditOutlined, PhoneOutlined, MailOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { Client, ClientStatus } from '../types';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\ninterface ClientCardProps {\r\n  client: Client;\r\n}\r\n\r\nconst statusMap: Record<Client['status'], { text: string; color: string }> = {\r\n  new: { text: 'Новый', color: 'blue' },\r\n  negotiation: { text: 'Переговоры', color: 'orange' },\r\n  contract: { text: 'Контракт', color: 'purple' },\r\n  deposit: { text: 'Задаток', color: 'cyan' },\r\n  success: { text: 'Успех', color: 'green' },\r\n  refused: { text: 'Отказ', color: 'red' },\r\n};\r\n\r\nconst ClientCard: React.FC<ClientCardProps> = ({ client }) => {\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"1\">Сменить статус</Menu.Item>\r\n    </Menu>\r\n  );\r\n  \r\n  const clientStatus = statusMap[client.status];\r\n\r\n  // --- Кнопки для связи через мессенджеры ---\r\n  const renderMessengers = () => {\r\n    const { telegramUsername, whatsappNumber } = client;\r\n    return (\r\n      <>\r\n        {telegramUsername && (\r\n          <a href={`https://t.me/${telegramUsername.replace(/^@/, '')}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src=\"/telegram-icon.svg\" alt=\"Telegram\" style={{ width: 22, height: 22, marginLeft: 6 }} loading=\"lazy\" />\r\n          </a>\r\n        )}\r\n        {whatsappNumber && (\r\n          <a href={`https://wa.me/${whatsappNumber.replace(/\\D/g, '')}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src=\"/whatsapp-icon.svg\" alt=\"WhatsApp\" style={{ width: 22, height: 22, marginLeft: 6 }} loading=\"lazy\" />\r\n          </a>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      hoverable\r\n      style={{ borderRadius: '16px' }}\r\n      actions={[\r\n        <EditOutlined key=\"edit\" />,\r\n      ]}\r\n    >\r\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n        <Space>\r\n          <Avatar size={48} icon={<UserOutlined />} />\r\n          <div data-testid={`client-card-${client.id}`}>\r\n            <Title level={5} style={{ margin: 0 }}>{client.name}</Title>\r\n            <Dropdown overlay={menu} trigger={['click']}>\r\n              <Tag color={clientStatus.color} style={{ cursor: 'pointer', marginTop: '4px' }}>\r\n                {clientStatus.text} ▾\r\n              </Tag>\r\n            </Dropdown>\r\n          </div>\r\n        </Space>\r\n\r\n        <Space direction=\"vertical\" style={{ marginTop: 16 }}>\r\n          <Space>\r\n            <PhoneOutlined />\r\n            <Text>{client.phone}</Text>\r\n            {renderMessengers()}\r\n          </Space>\r\n          <Space>\r\n            <MailOutlined />\r\n            <Text>{client.email}</Text>\r\n          </Space>\r\n          <Space>\r\n            <HomeOutlined />\r\n            <Text underline style={{ color: '#1890ff', cursor: 'pointer' }}>3-комнатная квартира, 78 м²</Text> \r\n          </Space>\r\n        </Space>\r\n      </Space>\r\n    </Card>\r\n  );\r\n};\r\n\r\nfunction areEqual(prevProps: ClientCardProps, nextProps: ClientCardProps) {\r\n  return (\r\n    prevProps.client.id === nextProps.client.id &&\r\n    prevProps.client.updatedAt === nextProps.client.updatedAt\r\n  );\r\n}\r\n\r\nexport default React.memo(ClientCard, areEqual); "],"names":["Title","_Typography","statusLabels","for_sale","in_deal","reserved","sold","LineChart","_ref","data","length","_jsx","style","color","textAlign","children","height","padding","max","Math","map","d","value","points","i","path","p","join","_jsxs","width","maxWidth","x1","y1","x2","y2","stroke","fill","strokeWidth","_ref2","x","y","cx","cy","r","textAnchor","fontSize","month","t","round","BarChart","_ref3","barWidth","h","rx","stage","_ref4","properties","clients","agents","setAgents","useState","loading","setLoading","useEffect","async","agentsData","Promise","all","getMyAgencyAgents","_message","error","load","total","forSale","filter","status","exclusive","isExclusive","agentCount","clientCount","monthly","reduce","acc","Date","createdAt","key","getFullYear","String","getMonth","padStart","lineData","Object","entries","_ref5","sort","a","b","localeCompare","funnelData","_ref6","agentStats","agent","propertyCount","id","topAgents","slice","agentColumns","title","dataIndex","render","_","lastName","firstName","v","_Tag","_Spin","level","_Row","gutter","_Col","span","_Card","_Statistic","prefix","HomeOutlined","StarOutlined","UserOutlined","marginTop","_Table","rowKey","columns","dataSource","pagination","size","Text","avatarStyle","borderRadius","objectFit","background","display","alignItems","justifyContent","cardStyle","boxShadow","marginBottom","minWidth","metaStyle","gap","AgencyAgentsTab","_modal$agent","_modal$agent2","user","useAuth","modal","setModal","visible","reason","setReason","actionLoading","setActionLoading","detailsModal","setDetailsModal","agentProperties","setAgentProperties","agentClients","setAgentClients","detailsLoading","setDetailsLoading","loadAgents","then","finally","xs","sm","md","actions","role","_Button","danger","onClick","restoreAgent","success","handleRestore","Boolean","bodyStyle","hoverable","getPropertiesByAgent","getClientsByAgent","openAgentDetails","src","photo","undefined","alt","onError","e","currentTarget","flex","fontWeight","lineHeight","margin","email","phone","_Empty","description","_Modal","open","onCancel","onOk","fireAgent","confirmLoading","okText","okButtonProps","placeholder","onChange","target","footer","type","property","PropertyCard","mode","client","ClientCard","AgencyManagersTab","managers","setManagers","getMyAgencyManagers","manager","_manager$firstName","Meta","avatar","_Avatar","_Fragment","AgencyPropertiesTab","setProperties","getMyAgencyProperties","loadProperties","toLocaleString","s","photos","_Image","pageSize","AgencyClientsTab","setClients","getAgencyClients","AgencySettingsTab","agency","setAgency","logoLoading","setLogoLoading","docsLoading","setDocsLoading","form","useRef","_Form","useForm","editing","setEditing","loadAgency","getMyAgency","layout","Item","label","name","rules","required","message","_Input","TextArea","rows","values","validateFields","fetch","method","headers","body","JSON","stringify","credentials","handleCancel","setFieldsValue","address","website","strong","handleEdit","marginLeft","verified","logo","_Upload","showUploadList","customRequest","file","onSuccess","formData","FormData","append","uploadAgencyLogo","info","accept","disabled","icon","UploadOutlined","documents","_List","renderItem","doc","docStr","href","rel","split","pop","uploadAgencyDocuments","AgencyJoinRequestsTab","requests","setRequests","loadRequests","api","get","getJoinRequests","handleApprove","patch","approveJoinRequest","handleReject","rejectJoinRequest","_r$user","_r$user2","marginRight","filteredRequests","_r$user3","AgencyDashboardPage","authContext","useContext","AuthContext","loadingAgency","setLoadingAgency","activeTab","setActiveTab","localStorage","getItem","_authContext$user","_authContext$user2","getAllProperties","token","getClients","agencyId","catch","border","_Tabs","activeKey","setItem","TabPane","tab","TeamOutlined","AgencyAnalyticsTab","SettingOutlined","post","response","Authorization","ok","Error","json","params","URLSearchParams","filters","forEach","toString","Array","isArray","agentId","statusMap","new","text","negotiation","contract","deposit","refused","menu","_Menu","clientStatus","EditOutlined","_Space","direction","_Dropdown","overlay","trigger","cursor","PhoneOutlined","renderMessengers","telegramUsername","whatsappNumber","replace","MailOutlined","underline","areEqual","prevProps","nextProps","updatedAt","React"],"sourceRoot":""}